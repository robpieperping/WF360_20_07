{
  "info": {
    "_postman_id": "96768c9f-3499-4c34-9ec0-3b67e4dfb0da",
    "name": "Solution: Workforce360 (v1.1.1)",
    "description": "This collection is a bundle of the following Use Cases:\n\n* Use Case: PD-Base\n* Use Case: PF Initial \n* Solution: Workforce - AD \n* Use Case: PC - Initial\n* Use Case: Add Sample Apps\n* Use Case: Add PingDataSync\n* Use Case: Add PD to Workforce\n\nVersion 1.1.1 - 5/11/2020\n**PingFederate**\n* Added GET `/version` call to determine if API Admin account needs additional roles (v10.1+)\n* Added links to the PF Admin Guide for most PF calls\n\nVersion 1.1 - 5/8/2020  \n\n**PingDirectory**\n* Modified Service Detection code in `Check if PD Server is Up` call to reduce AssertionError count\n* Variablized PF Service Account Passwords\n * `pingfederate` / `pfAdminPwd`\n * `pingauditor` / `globalPwd`\n\n**PingFederate**\n* Properly variablized AD connection\n\n* *Use Case: ActiveDirectory*\n* Modified to allow P14E Connection:\n * AD PCV\n * HTML Form Adapter\n * ID-First Adapter\n * Policy Contract\n * AuthN Policies\n\n* *Use Case: PingDirectory*\n* Modified to allow P14E Connection:\n * PD PCV\n * HTML Form Adapter\n * ID-First Adapter\n * Policy Contract\n * AuthN Policies\n\n* *Use Case: Add Sample Apps*\n * Added OAuth client for `client_credential` tokens -- `pingservices` \n\n**PingDataSync**\n* Added `adUserContainer` to DataSync - allows you do configure what Users are synced\n* Added Groups to DataSync (`adGroupContainer`)\n\nVersion 1.0\n* Initial release\n",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "PD - Baseline",
      "item": [
        {
          "name": "Check PD is Running",
          "item": [
            {
              "name": "Check if PD is up",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "60755a52-129a-496f-b7e5-933860c52f83",
                    "exec": [
                      "//console.log(\"Service is Down\");",
                      "//setTimeout(function() {}, 15000);",
                      "//postman.setNextRequest(request.name);",
                      "var host = pm.request.url.host.toString();",
                      "var host = host.replace(\"{{\",\"\");",
                      "var host = host.replace(\"}}\",\"\");",
                      "var host = pm.variables.get(host);",
                      "",
                      "var path = pm.request.url.path.toString();",
                      "var path = path.replace(/,/g,\"/\");",
                      "",
                      "var request = host + \"/\"+ path;",
                      "//console.log(request);",
                      "",
                      "//pm.sendRequest(host, function (err, res) {",
                      "//        if(err){",
                      "            console.log(\"Service is not available\");",
                      "            postman.setNextRequest(pm.info.requestName);",
                      "            setTimeout(function() {}, 15000);",
                      "//        }",
                      "//});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8bb35a42-a5d0-44d3-99b4-f0241cc7f534",
                    "exec": [
                      "if(pm.response.code === 200){",
                      "    pm.test(\"BaseDN retrieved\", function () {",
                      "        pm.response.to.have.jsonBody(\"publicBaseDNs\");",
                      "               ",
                      "        var response = pm.response.json();",
                      "        pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0]);",
                      "        postman.setNextRequest(\"00-Start-PD-Base\");",
                      "    });",
                      "}",
                      "",
                      "",
                      "",
                      "",
                      "//pm.test(\"BaseDN retrieved\", function () {",
                      "//    console.log(pm.response.json());",
                      "//    if (error) {",
                      "//        console.log(\"PD is Down\");",
                      "//        postman.setNextRequest(\"Check if PD is up\");",
                      "//    }",
                      "//    else{",
                      "//       console.log(\"PD is Available: baseDN=\" + response.publicBaseDNs[0]);",
                      "//        pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0]);",
                      "//        ",
                      "//        postman.setNextRequest(\"00-Start-PD-Base\");",
                      "//    }",
                      "//});",
                      "",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "9d164048-bfd3-46ad-8bd9-7ab6c5e4c0de",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "username": "{{pdAdmin}}",
                    "password": "{{pdAdminPwd}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1/",
                "description": "Uses the API endpoint instead of just the heartbeat"
              },
              "response": []
            },
            {
              "name": "00-Start-PD-Base",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cd64bf84-50d5-4ada-aec9-ff1d52f0c5cb",
                    "exec": [
                      "pm.test(\"Starting Collection\", function () {",
                      "    pm.response.to.be.status(302);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c6e1b87e-07db-4d9c-a9e0-87ce8dc2a98c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com"
              },
              "response": []
            }
          ],
          "_postman_id": "8e838877-b340-497b-89fa-02da66de70e3",
          "description": "This folder contains the call that's used to wait until a desired condition is met.\n\nThe `Pre-request` of the call contains a log event with a timer of 30s. The `Test Script` of the call contains the loop back to this call, and the Condition test that will break the looping.\n\nThe name of the call for the break is `00-Start-PD-Base` -- it's a simple GET request to https://postman-echo.com and allows for this to be always consistent.\n\nThe actual set of API calls for this collection are started right after this GET call.",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "263d6b60-7de9-4ff9-850e-1838ee21a6a3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ba5aaee1-d75e-4fca-8667-8ff592b34ad4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Service Configuration",
          "item": [
            {
              "name": "00-debug-logging",
              "item": [
                {
                  "name": "Enable Log Publisher",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "03038016-c1e1-4556-bab7-f71f930406d0",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3f0a7e95-6fdc-4b06-b16f-aeabcc88f5bc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"true\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/log-publishers/File-Based Debug Logger"
                  },
                  "response": []
                },
                {
                  "name": "Add Debug Target - Replication ",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a98cdfb-216c-420f-89e3-ee8b0993752e",
                        "exec": [
                          "pm.test(\"Debug Target Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4baabe71-2cec-4c5b-be6c-8e78bca2636a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:debug-target\" ],\n  \"debugLevel\" : \"verbose\",\n  \"targetName\" : \"com.unboundid.guitools.replicationcli\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/log-publishers/File-Based%20Debug%20Logger/debug-targets"
                  },
                  "response": []
                }
              ],
              "_postman_id": "92293f8b-e9f8-4bc0-a36e-d65c2981345b",
              "_postman_isSubFolder": true
            },
            {
              "name": "01-remove-console-docs",
              "item": [
                {
                  "name": "Configure HTTPS Connection Handler",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "94340d72-9f91-4ae7-918f-8ca59b012eb4",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "94c6d324-7d67-440b-97a3-33accda8f8bd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"httpServletExtension\" : [ \"Available or Degraded State\", \"Available State\", \"Configuration\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/connection-handlers/HTTPS%20Connection%20Handler"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2e47b4f1-22df-4572-8ea5-b50ed802e91d",
              "_postman_isSubFolder": true
            },
            {
              "name": "10-gauges",
              "item": [
                {
                  "name": "CPU Usage (Percent)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "388979c3-66e6-4cde-bfaa-d11f4bd85a3d",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "89d998b3-ede7-40fd-97f5-204f4fb4ff3e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/gauges/CPU%20Usage%20(Percent)"
                  },
                  "response": []
                },
                {
                  "name": "License Expiration (Days)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c604fcb6-5ae0-4b04-ba72-331748aec4a0",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "13871c92-67a4-4f0d-9f7c-e97660545aa8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/gauges/License%20Expiration%20(Days)"
                  },
                  "response": []
                },
                {
                  "name": "Available File Descriptors",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e466a10f-d33b-425e-8f59-a6879ac8d837",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "0f34c8c0-2554-4934-8d3c-2dc59b694a8d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/gauges/Available%20File%20Descriptors"
                  },
                  "response": []
                }
              ],
              "_postman_id": "ecd16495-4d31-4cce-9ecb-a934c23a775c",
              "_postman_isSubFolder": true
            },
            {
              "name": "10-log-publishers",
              "item": [
                {
                  "name": "Data Recovery Log",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "84d63763-e2b5-40ee-ac57-1db1c586122c",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "985d3f74-7e6f-4314-ad10-b7ce01ef556c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"false\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/log-publishers/Data%20Recovery%20Log"
                  },
                  "response": []
                }
              ],
              "_postman_id": "ca2fd029-e322-48b5-9580-533e838e6428",
              "_postman_isSubFolder": true
            },
            {
              "name": "10-RootDNs",
              "item": [
                {
                  "name": "Add Alt DN to DManager",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "be53a3e0-8c48-4e7d-9cd3-cb32c179fa36",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e1914b57-7bdf-4d00-97b9-0083176b172d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"operations\": [\n        {\n            \"path\": \"alternateBindDN\",\n            \"op\": \"add\",\n            \"value\": \"cn=administrator\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users/Directory%20Manager"
                  },
                  "response": []
                },
                {
                  "name": "Add DataSync User",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e8d8eb7b-b6da-4249-a612-3689f2129c20",
                        "exec": [
                          "pm.test(\"DataSync RootDN Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a3a283f9-d4fb-4fe1-83b3-7c85c1cc6e9a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:user\" ],\n  \"alternateBindDN\" : [ \"cn=datasync\", \"cn=sync\" ],\n  \"password\" : \"{{pdAdminPwd}}\",\n  \"inheritDefaultRootPrivileges\" : \"false\",\n  \"privilege\" : [ \"bypass-acl\", \"bypass-pw-policy\", \"config-read\", \"password-reset\", \"unindexed-search\" ],\n  \"userName\" : \"pingdatasync\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users"
                  },
                  "response": []
                },
                {
                  "name": "Add DataGov User",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "334678e5-265c-4c1b-8776-18386537060e",
                        "exec": [
                          "pm.test(\"DataGov RootDN Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "64d0298a-a291-4a1e-ba8c-8eb7c7898725",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:user\" ],\n  \"alternateBindDN\" : [ \"cn=datagov\", \"cn=pingdatagovernance\" ],\n  \"password\" : \"{{pdAdminPwd}}\",\n  \"inheritDefaultRootPrivileges\" : \"false\",\n  \"privilege\" : [ \"password-reset\", \"proxied-auth\", \"unindexed-search\" ],\n  \"searchResultEntryLimit\" : \"100000\",\n  \"userName\" : \"pingdatagovernance\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users"
                  },
                  "response": []
                },
                {
                  "name": "Add PingFederate",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9b85ed00-31b6-45bb-beba-4eaff95b2062",
                        "exec": [
                          "pm.test(\"PingFederate RootDN Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9e150f91-5571-449a-a99e-cf0bbba99005",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:user\" ],\n  \"alternateBindDN\" : [ \"cn=fed\", \"cn=pf\", \"cn=pingfederate\" ],\n  \"password\" : \"{{pfAdminPwd}}\",\n  \"inheritDefaultRootPrivileges\" : \"false\",\n  \"privilege\" : [ \"config-read\", \"password-reset\", \"permit-get-password-policy-state-issues\", \"proxied-auth\", \"unindexed-search\" ],\n  \"isProxyable\" : \"prohibited\",\n  \"userName\" : \"pingfederate\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/root-dn/root-dn-users"
                  },
                  "response": []
                }
              ],
              "_postman_id": "4b9a81bb-81dd-4b13-988a-13cfeed2f13a",
              "_postman_isSubFolder": true
            },
            {
              "name": "11-changelog",
              "item": [
                {
                  "name": "Allow changelog in Sync",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "32445efc-8c13-4366-9eff-3c11269f7a1d",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8156b7ca-59ad-4c77-a2d4-71eb3a640135",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"changelogMaximumAge\": \"2 h\",\n    \"enabled\": true\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/changelog"
                  },
                  "response": []
                }
              ],
              "_postman_id": "0fada07a-b638-4c7b-a0cb-33834e48abbf",
              "_postman_isSubFolder": true
            },
            {
              "name": "12-indexes",
              "item": [
                {
                  "name": "pf-connected-identity",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6df83981-fb3a-4eca-82b4-2e0f99d495f1",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e6672699-1b7f-4d1a-aa53-02b274f2fabc",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"pf-connected-identity\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "pf-oauth-client-id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0d550d52-78f8-4a1c-9c44-93046f5a93a1",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "f84555cb-d328-4483-9093-1e1eee60e076",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : [ \"equality\", \"ordering\", \"substring\" ],\n  \"indexName\" : \"pf-oauth-client-id\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "pf-oauth-client-name",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5daf6ca0-01ff-4b90-98b8-1ec4164d5d15",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5bf29bfa-e94e-43c6-a17b-9f0b54f69217",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : [ \"equality\", \"ordering\", \"substring\" ],\n  \"indexName\" : \"pf-oauth-client-name\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "pf-oauth-client-last-modified",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "282ab4ca-3b66-4122-9fc3-f3f6ce071f40",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ebb9a37d-cb38-4d93-93ef-0b132e7f28b0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"ordering\",\n  \"indexName\" : \"pf-oauth-client-last-modified\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantClientId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1a335cf3-e73f-4cf2-9193-0ed1502af7fb",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1cce122b-c36f-4ea1-ba15-0f5ede7424ed",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantClientId\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantUniqueUserIdentifier",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8edeaf5e-d894-4ab7-99a9-e7f1997403d9",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "31c8194c-38b3-4028-b7f0-10c65b3d60f8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantUniqueUserIdentifier\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantGuid",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c237670b-62a9-4b89-9ca7-9372a91a1fe1",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4080bb0c-66a9-4220-9768-d114982af66b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantGuid\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantHashedRefreshTokenValue",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b51a58ea-2d31-4ee4-99d6-bf2faaf3b67e",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3f4591d8-9fc6-430e-892a-c9ed222f2496",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"equality\",\n  \"indexName\" : \"accessGrantHashedRefreshTokenValue\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                },
                {
                  "name": "accessGrantExpires",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "95ec731c-8214-4f2c-9a8f-647a664932c5",
                        "exec": [
                          "pm.test(\"Index Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "95e554da-e316-4a23-8807-6f0d44b01471",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:local-db-index\" ],\n  \"indexType\" : \"ordering\",\n  \"indexName\" : \"accessGrantExpires\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot/local-db-indexes"
                  },
                  "response": []
                }
              ],
              "_postman_id": "1825f6b1-05ed-40dd-813f-18919a032776",
              "_postman_isSubFolder": true
            },
            {
              "name": "13-global-acis",
              "item": [
                {
                  "name": "Global ACIs - PingFederate",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "66547205-4b1f-4b2f-8980-d5a379d672f8",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d30a8d20-0b09-4dc9-b4db-440f7ef663a2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"operations\": [\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.2.840.113556.1.4.319\\\")(version 3.0; acl \\\"Allow paging for pingfederate\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.2.840.113556.1.4.473\\\")(version 3.0; acl \\\"Allow Server Sort for pingfederate\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.3.6.1.1.13.2\\\")(version 3.0; acl \\\"Anonymous access to the post-read request control as described in RFC 4527\\\"; allow (read) userdn=\\\"ldap:///anyone\\\";)\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/access-control-handler"
                  },
                  "response": []
                },
                {
                  "name": "Global ACIs - DataGov",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f528fbd8-71fd-47f1-a8b4-a819a6449838",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "075107fe-efd7-4f9a-80e6-865d676b7e52",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"operations\": [\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(target=\\\"ldap:///cn=alerts\\\")(targetattr=\\\"*||+\\\")(version 3.0; acl \\\"pingdatagovernance access to the alerts backend\\\"; allow(read,search,compare) userdn=\\\"ldap:///cn=pingdatagovernance,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(target=\\\"ldap:///cn=monitor\\\")(targetattr=\\\"*||+\\\")(version 3.0; acl \\\"pingdatagovernance access to the monitor backend\\\"; allow(read,search,compare) userdn=\\\"ldap:///cn=Govepingdatagovernance,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetcontrol=\\\"1.2.840.113556.1.4.1413||1.3.6.1.1.13.2||1.3.6.1.4.1.30221.2.5.2||1.3.6.1.4.1.30221.2.5.40||1.3.6.1.4.1.30221.2.5.44||1.3.6.1.1.12||2.16.840.1.113730.3.4.3\\\")(version 3.0; acl \\\"pingdatagovernance access to selected controls\\\"; allow (read) userdn=\\\"ldap:///cn=pingdatagovernance,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(targetattr=\\\"uid||entryUUID||isMemberOf\\\")(version 3.0; acl \\\"pingdatagovernance access to selected attributes\\\"; allow(all) userdn=\\\"ldap:///cn=pingdatagovernance,cn=Root DNs,cn=config\\\";)\"\n        },\n        {\n            \"path\": \"globalACI\",\n            \"op\": \"add\",\n            \"value\": \"(target=\\\"ldap:///{{userBaseDN}}\\\")(targetattr=\\\"*||+\\\")(version 3.0; acl \\\"pingdatagovernance access to user store data\\\"; allow(all) userdn=\\\"ldap:///cn=pingdatagovernance,cn=Root DNs,cn=config\\\";)\"\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/access-control-handler"
                  },
                  "response": []
                }
              ],
              "_postman_id": "ff81647d-84da-4653-aae9-18883f1bb145",
              "_postman_isSubFolder": true
            },
            {
              "name": "20-plug-in",
              "item": [
                {
                  "name": "Create Plug-In - ExpiredSessionAutoPurge",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9440d5a6-51d7-49dd-a06b-ec0fd490df49",
                        "exec": [
                          "pm.test(\"Plug-In Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5a6dfd11-1c09-4389-ae0e-68b6f7e557e9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data\" ],\n  \"enabled\" : \"true\",\n  \"datetimeAttribute\" : \"pf-authn-session-group-expiry-time\",\n  \"expirationOffset\" : \"1 h\",\n  \"purgeBehavior\" : \"subtree-delete-entries\",\n  \"baseDN\" : \"ou=sessions,{{userBaseDN}}\",\n  \"filter\" : \"(objectClass=pf-authn-session-groups)\",\n  \"pollingInterval\" : \"20 m\",\n  \"pluginName\" : \"ExpiredSessionAutoPurge\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/plugin-root/plugins"
                  },
                  "response": []
                },
                {
                  "name": "Create Plug-In - IdleSessionAutoPurge",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e5e6975-5cea-4058-b880-5f356588137d",
                        "exec": [
                          "pm.test(\"Plug-In Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9c43c201-6fb1-4a1c-9c1e-e5731fc92ec9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data\" ],\n  \"enabled\" : \"true\",\n  \"datetimeAttribute\" : \"pf-authn-session-group-last-activity-time\",\n  \"expirationOffset\" : \"1 w\",\n  \"purgeBehavior\" : \"subtree-delete-entries\",\n  \"baseDN\" : \"ou=sessions,{{userBaseDN}}\",\n  \"filter\" : \"(objectClass=pf-authn-session-groups)\",\n  \"pollingInterval\" : \"1 d\",\n  \"pluginName\" : \"IdleSessionAutoPurge\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/plugin-root/plugins"
                  },
                  "response": []
                }
              ],
              "_postman_id": "484f56ba-b129-4e52-8e43-144a770d1d08",
              "_postman_isSubFolder": true
            },
            {
              "name": "77-tuning",
              "item": [
                {
                  "name": "Compact common parent DN",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b17960d3-d5ef-4983-9f63-e10f8b578c59",
                        "exec": [
                          "pm.test(\"Modification Done\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a275a182-2d7c-47e3-a38b-4d2d3fe26032",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"compactCommonParentDN\": \"ou=People,{{userBaseDN}}\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/backends/userRoot"
                  },
                  "response": []
                }
              ],
              "_postman_id": "efef0083-2fed-4c66-8331-ae2e52730287",
              "_postman_isSubFolder": true
            },
            {
              "name": "Add HTTPS Connection Handler",
              "item": [
                {
                  "name": "Add Delegated Admin to Connection Handler Copy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f51e0e02-f1a9-4a2c-861c-e12319ae9538",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3e4c5937-9589-42e2-996e-022be619568e",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:connection-handler:http\"\n    ],\n    \"id\": \"HTTPS Connection Handler - PD Services\",\n    \"meta\": {\n        \"resourceType\": \"HTTP Connection Handler\"\n    },\n    \"acceptBacklog\": 128,\n    \"allowTCPReuseAddress\": true,\n    \"correlationIDRequestHeader\": [\n        \"Correlation-Id\",\n        \"X-Correlation-Id\",\n        \"X-CorrelationID\",\n        \"X-MS-Correlation-Id\",\n        \"X-Request-Id\",\n        \"X-Amzn-Trace\"\n    ],\n    \"correlationIDResponseHeader\": \"Correlation-Id\",\n    \"enableMultipartMIMEParameters\": false,\n    \"enabled\": true,\n    \"handlerName\": \"HTTPS Connection Handler - PD Services\",\n    \"httpOperationLogPublisher\": [\n        \"HTTP Detailed Access\"\n    ],\n    \"httpRequestHeaderSize\": 8192,\n    \"httpServletExtension\": [\n        \"Consent\",\n        \"Delegated Admin\",\n        \"Directory REST API\",\n        \"SCIM2\"\n    ],\n    \"idleTimeLimit\": \"3 m 20 s\",\n    \"keepStats\": true,\n    \"keyManagerProvider\": \"JKS\",\n    \"listenPort\": 2443,\n    \"lowResourcesConnectionThreshold\": 0,\n    \"lowResourcesIdleTimeLimit\": \"3 m 20 s\",\n    \"numRequestHandlers\": 0,\n    \"sslCertNickname\": \"server-cert\",\n    \"trustManagerProvider\": \"JKS\",\n    \"useCorrelationIDHeader\": true,\n    \"useForwardedHeaders\": false,\n    \"useSSL\": true,\n    \"webApplicationExtension\": [\n        \"Console\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/connection-handlers"
                  },
                  "response": []
                }
              ],
              "_postman_id": "74fa4a7b-eb74-4756-9245-ebd0a9481d81",
              "description": "Not part of GTE -- these calls are to create a new HTTPS Connection Handler that can be used by things other than the ConfigAPI.\n\nThis will allow changes to be made to the Handler in the ConfigAPI and allow the API to restart it",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "40e72686-822e-4d11-b56e-7718fbf628ac",
          "description": "Contains the ConfigAPI calls to mimic GTE Baseline",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3f38ee52-1bf4-4a85-a158-550b309deeb8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ebe27d8f-ff6a-49b8-96c3-8f9a1219debe",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Data Configuration",
          "item": [
            {
              "name": "Configure BaseDN",
              "item": [
                {
                  "name": "Replace ACIs",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "caf8d489-4fab-46d2-8184-bc3f16194d72",
                        "exec": [
                          "pm.test(\"Default ACIs Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "0fef9c3d-1c39-455b-b21a-fe8be1065734",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"modifications\": [\n        {\n            \"attributeName\": \"aci\",\n            \"modificationType\": \"set\",\n            \"values\": [\n                \"(targetattr=\\\"userPassword\\\")(version 3.0; acl \\\"Allow users to update their own password\\\"; allow (write) userdn=\\\"ldap:///self\\\";)\",\n                \"(version 3.0; acl \\\"PingFed Proxy Access\\\"; allow(proxy) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetattr!=\\\"userPassword\\\")(version 3.0; acl \\\"Allow the pingfederate user to do everything in this branch\\\"; allow(all) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetattr=\\\"userPassword\\\")(version 3.0; acl \\\"Allow the pingfederate user to update passwords\\\"; allow (write) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetattr=\\\"isMemberOf\\\")(version 3.0; acl \\\"Allow the pingfederate user to get memberships\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetcontrol=\\\"1.3.6.1.4.1.42.2.27.9.5.8\\\")(version 3.0; acl \\\"Access to the Account Usability Control\\\"; allow (read) userdn=\\\"ldap:///cn=pingfederate,cn=root dns,cn=config\\\";)\",\n                \"(targetcontrol=\\\"1.3.6.1.4.1.30221.2.5.40\\\")(version 3.0; acl \\\"Access to the Password Validation Details Request Control\\\"; allow (read) userdn=\\\"ldap:///{{userBaseDN}}\\\";)\"\n            ]\n        }\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/{{userBaseDN}}"
                  },
                  "response": []
                }
              ],
              "_postman_id": "59abfa16-ee15-48f9-8d8a-d4b340a9a63a",
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Initial OUs",
              "item": [
                {
                  "name": "Create People OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f51e0e02-f1a9-4a2c-861c-e12319ae9538",
                        "exec": [
                          "pm.test(\"ou=People Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ac320d49-fc0d-46c5-a8d1-42e75ed618b1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create Groups OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "51b782a2-a4e6-4b70-b185-e65a9557da79",
                        "exec": [
                          "pm.test(\"ou=Groups Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7d04233a-a6fa-48a9-81cc-05ea689a72da",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=Groups,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create Consents OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9a61c67-2a8a-4a70-b521-98baba611058",
                        "exec": [
                          "pm.test(\"ou=Consents Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3c510f5a-ca29-49ad-a431-e5f3c44dab9f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=Consents,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create oauthClients OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aa211317-febb-4a0c-843e-7a8938e7c41e",
                        "exec": [
                          "pm.test(\"ou=oauthClients Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "9a5e7771-ec8c-4cb7-8e9a-f80390c89767",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=oauthClients,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create grants OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c3c96226-2742-466a-85a7-11606845749e",
                        "exec": [
                          "pm.test(\"ou=grants Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7f0da99a-d956-44e6-80aa-4e93005e3a54",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=grants,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Create sessions OU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "89f43827-7a3d-4442-aec7-4ed7a6723bcb",
                        "exec": [
                          "pm.test(\"ou=Sessions Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "6401f150-9ad5-4afc-aebc-bc7aa43118c2",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ou=sessions,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2d66b068-e646-46d5-bb67-b624f473fedd",
              "description": " Create OUs for:\n * Consents\n * Groups\n * Grants\n * OAuthClients\n * People\n * Sessions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9f3750f6-e094-45a8-bd87-071c709c6b4c",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d2d2042f-dc8f-4c27-9465-e285f5e9b19b",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Initial Users (Services)",
              "item": [
                {
                  "name": "Create PF Administrator account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a8c8501a-ebc2-4f36-97cc-89624f2663da",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "62a913e1-6c1f-4e1f-8f3c-0886c7208779",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=administrator,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"PingFederate\" ],\n\t\"cn\": [ \"administrator\" ],\n\t\"givenName\": [ \"Administrator\" ],\n\t\"mail\": [ \"administrator@example.com\" ],\n\t\"uid\": [ \"administrator\" ],\n\t\"userPassword\": [ \"{{pfAdminPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=administrator\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create PF Auditor account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3bb84454-0daf-48aa-afb6-e949db74498e",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "50044d63-0f55-4cf6-b9de-0ec824973e01",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=auditor,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"PingFederate\" ],\n\t\"cn\": [ \"auditor\" ],\n\t\"givenName\": [ \"Auditor\" ],\n\t\"mail\": [ \"auditor@example.com\" ],\n\t\"uid\": [ \"auditor\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=auditor\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create PA account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d397997f-3319-41d9-889e-0433fd3d71a3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=access2federate,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"PingAccess\" ],\n\t\"cn\": [ \"pingFederateAdministrator\" ],\n\t\"givenName\": [ \"PingAccess\" ],\n\t\"uid\": [ \"access2federate\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=access2federate\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFAdminGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fac78bea-5ade-4391-97b1-c7a21d8276c0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFAdminGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFAdminGroup\"\n    ],\n    \"member\": [\n        \"uid=administrator,ou=People,{{userBaseDN}}\",\n        \"uid=access2federate,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFCryptoGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ceecd8ed-889b-485a-8329-7b72c40038e8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFCryptoGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFCryptoGroup\"\n    ],\n    \"member\": [\n        \"uid=administrator,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFAuditorGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4a990aaf-86c3-4238-ae01-f53d1167b61d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFAuditorGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFAuditorGroup\"\n    ],\n    \"member\": [\n        \"uid=auditor,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - PFUserAdminGroup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "16a4f581-57c2-4cef-a05c-286ee3df5a6b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"_dn\": \"cn=PFUserAdminGroup,ou=Groups,{{userBaseDN}}\",\n    \"objectClass\": [\n        \"groupOfNames\"\n    ],\n    \"cn\": [\n        \"PFUserAdminGroup\"\n    ],\n    \"member\": [\n        \"uid=administrator,ou=People,{{userBaseDN}}\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                }
              ],
              "_postman_id": "911279aa-eeb8-48c7-b574-02ff64aab318",
              "description": "Service Accounts \\ Groups: \n* PF Administrator (PF Console)\n* PF Auditor (PF Console)\n* PA Account (Why does GTE do this??)\n* Group - PFAdminGroup (mapped in PF `ldap.properties`)\n* Group - PFAuditorGroup (mapped in PF `ldap.properties`)\n* Group - PFCryptoGroup (mapped in PF `ldap.properties`)\n* Group - PFUserAdminGroup (mapped in PF `ldap.properties`)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "1c7a77f5-801c-4ef4-a047-930e1a4dbf06",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "270b95e4-8d84-42d4-9b80-584882356400",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Initial Users (Users)",
              "item": [
                {
                  "name": "Create user.0 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "51c8e6b9-09d0-430a-947f-19f6abc90a19",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.0,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.0\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"mail\": [ \"user.0@{{$randomDomainName}}\"],\n\t\"uid\": [ \"user.0\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.0\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.1 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "8a9d4fa7-8734-40f5-9271-63bf93edcfa1",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.1,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.1\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"mail\": [ \"user.1@{{$randomDomainName}}\"],\n\t\"uid\": [ \"user.1\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.1\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.2 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e332469e-12f0-460d-9f56-6cff387efc6a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.2,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.2\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"mail\": [ \"user.2@{{$randomDomainName}}\"],\n\t\"uid\": [ \"user.2\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.2\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.3 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1661b127-42f5-47a2-a9c3-0a760dfd3745",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.3,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.3\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"mail\": [ \"user.3@{{$randomDomainName}}\"],\n\t\"uid\": [ \"user.3\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.3\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create user.4 account",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c301fa83-9d4c-4e39-873e-6fefd7006e45",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=user.4,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"user.4\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"mail\": [ \"user.4@{{$randomDomainName}}\"],\n\t\"uid\": [ \"user.4\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=user.4\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create Group - group.0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ace4c1f4-80ea-4cfe-aca0-6195bd44140c",
                        "exec": [
                          "pm.test(\"Object Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b6276583-3c2b-4245-bbb1-f6edb563a18b",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"cn=group.0,ou=Groups,{{userBaseDN}}\",\n\t\"objectClass\": [ \"groupOfNames\" ],\n\t\"cn\": [ \"group.0\" ],\n\t\"member\": [\"uid=user.0,ou=people,{{userBaseDN}}\"]\n}\n",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                }
              ],
              "_postman_id": "d9be155a-6533-4738-aa7b-76e6c2e96693",
              "description": "Users \\ Groups for AuthN:\n* User.[0-4]\n* Group.0",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e70d91fd-ed73-40d4-b5a5-569465ab3ba6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9efdf51c-dc48-4338-9e4f-0f2bdf440f67",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "ebea1ae5-6184-498f-81ed-c2c3ac3d90d4",
          "description": "Contains the DirectoryAPI calls to create the data for OUs and Users:\n\n* Configures `userBaseDN` ACIs to support PF Self-Service Reset and PD Delegated Admin\n* Creates Default OUs\n* Creates Service Users and Groups\n* Creates Users and Groups",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "feb05921-bffe-4a8f-854e-10edab99a322",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2cb96c4e-9f89-4850-b0c6-1663e497d8d7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "f97e532f-f862-4192-9eba-cce6318a7513",
      "description": "These calls mimic what GTE Baseline - PingDirectory does with `dsconfig` and ldif imports.\n\nAnything that can be done via an API (Config or Dir) are here.\n\nPD Server Profile only needs the schema folder.",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pdAdminPwd}}",
          "username": "{{pdAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0f26d3f1-7470-4ede-bfab-2b5ef7b1432e",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "3b3541db-d25e-4f3e-a882-fc4f05c6aecf",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PF - Initial",
      "item": [
        {
          "name": "Check PF is Running",
          "item": [
            {
              "name": "Check if PF is up",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a7864a9-1358-402a-b81d-bcc6da8044ff",
                    "exec": [
                      "// Checks to see if the server actually responded",
                      "// If not, run the call again (with the 30 sec delay)",
                      "postman.setNextRequest(\"Check if Server is up\");",
                      "",
                      "pm.test(\"Server is Up\", function () {",
                      "    pm.response.to.be.ok;",
                      "    postman.setNextRequest(\"00-Start-PF-Base\");",
                      "});",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f9e66381-07f9-487a-b8e4-f97b5521bef7",
                    "exec": [
                      "// Puts a 10 sec delay into this call",
                      "setTimeout(function() {",
                      " console.log(\"Connecting to PF: \", pm.variables.get(\"pfAdminURL\"));",
                      "}, 10000);"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "2131dc61-ed23-4587-b1bd-9ea6b7287e41",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/license/agreement",
                "description": "Uses the API endpoint instead of just the heartbeat"
              },
              "response": []
            },
            {
              "name": "00-Start-PF-Base",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "cd64bf84-50d5-4ada-aec9-ff1d52f0c5cb",
                    "exec": [
                      "pm.test(\"Starting Collection\", function () {",
                      "    pm.response.to.be.status(302);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b1fa8574-f537-4bae-8599-d6df080f1252",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": "https://postman-echo.com"
              },
              "response": []
            }
          ],
          "_postman_id": "c58c0737-c3a0-4694-92e7-822ae6dcbb10",
          "description": "This folder contains the call that's used to wait until a desired condition is met.\n\nThe `Pre-request` of the call contains a log event with a timer of 30s. The `Test Script` of the call contains the loop back to this call, and the Condition test that will break the looping.\n\nThe name of the call for the break is `00-Start-PF-Base` -- it's a simple GET request to https://postman-echo.com and allows for this to be always consistent.\n\nThe actual set of API calls for this collection are started right after this GET call.",
          "auth": {
            "type": "noauth"
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "263d6b60-7de9-4ff9-850e-1838ee21a6a3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ba5aaee1-d75e-4fca-8667-8ff592b34ad4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Initial Server Config",
          "item": [
            {
              "name": "Get BaseDN from PD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                    "exec": [
                      "pm.test(\"BaseDN retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6ff51e6e-87da-4ba8-857d-01a6bc0b1f25",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "74a16deb-8b6e-4f37-b28f-244a4a23c106",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "password": "{{pdAdminPwd}}",
                    "username": "{{pdAdmin}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1",
                "description": "Gets the `userbaseDN` that was used to create the PD instance"
              },
              "response": []
            },
            {
              "name": "Accept EULA",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "04f559ef-34fc-4ab3-9a8f-1b7fd36d993c",
                    "exec": [
                      "pm.test(\"EULA Accepted\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "69ae9933-2bf3-4e3d-ae09-7b0916960628",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"accepted\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/license/agreement"
              },
              "response": []
            },
            {
              "name": "Create Initial API Admin Account",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f99d64af-a643-4445-bcac-fe0d289c4817",
                    "exec": [
                      "pm.test(\"API Admin account created\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    // `encryptedPassword` needed to Update Account Later",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"encryptedPassword\", response.encryptedPassword);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "894dc31e-4ac6-4142-b3f7-51e4cdaa20e9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"username\": \"{{pfAdmin}}\",\n    \"password\": \"{{globalPwd}}\",\n    \"active\": \"true\",\n    \"description\": \"Used to perform Admin API calls\",\n    \"roles\": [ \"USER_ADMINISTRATOR\", \"CRYPTO_ADMINISTRATOR\", \"ADMINISTRATOR\" ]\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/administrativeAccounts",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=uwm1564002973007.html"
              },
              "response": []
            },
            {
              "name": "Check Version",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e6ceed9d-02c1-4076-8884-813a097208d1",
                    "exec": [
                      "pm.test(\"Version retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    var response = pm.response.json();",
                      "    ",
                      "    // Split the Version into numbers",
                      "    var version = response.version.split(\".\");",
                      "    var major = parseInt(version[0]);",
                      "    var minor = parseInt(version[1]);",
                      "    // Combine into a single number (makes the comparison easier)",
                      "    var currentVersion = Number(major + minor/10);",
                      "",
                      "    // Check to see if EXPRESSION_ADMIN is needed (v10.1+)",
                      "    if(currentVersion >= 10.1){",
                      "        console.log(\"Creating v10.1+ Admin\");",
                      "        var pfAdminRoles = \"[ \\\"USER_ADMINISTRATOR\\\", \\\"CRYPTO_ADMINISTRATOR\\\", \\\"ADMINISTRATOR\\\", \\\"EXPRESSION_ADMINISTRATOR\\\" ]\";",
                      "    }",
                      "    else{",
                      "        var pfAdminRoles = \"[ \\\"USER_ADMINISTRATOR\\\", \\\"CRYPTO_ADMINISTRATOR\\\", \\\"ADMINISTRATOR\\\" ]\";",
                      "        }",
                      "    pm.environment.set(\"pfAdminRoles\", pfAdminRoles);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "6b649360-5dae-44c1-ae66-68f3e966870a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "url": "{{pfAdminURL}}/pf-admin-api/v1/version",
                "description": "Used to detect the running version of PF and makes version dependant changes. \nThere's a Test Script that performs the actions.\n\n* Admin Account Role: 10.1+ needs additional Role"
              },
              "response": []
            },
            {
              "name": "Update API Admin Account with version Roles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa160a1a-873a-4911-95aa-95867a40a4dc",
                    "exec": [
                      "pm.test(\"API Admin account created\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "ea342256-7dd5-4af1-84bb-8b714186bf6a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"username\": \"{{pfAdmin}}\",\n    \"active\": \"true\",\n    \"description\": \"Used to perform Admin API calls\",\n    \"encryptedPassword\": \"{{encryptedPassword}}\",\n    \"roles\": {{pfAdminRoles}}\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/administrativeAccounts/{{pfAdmin}}",
                "description": "PF 10.1+ adds a Role that is needed to use the `/config-store` API. \n\nThis call puts the right roles onto the created Admin account"
              },
              "response": []
            },
            {
              "name": "Get License",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dad3bd03-a53e-472d-96ae-5dc8c7f52a29",
                    "exec": [
                      "pm.test(\"PF License retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"wsTrustEnabled\", response.wsTrustEnabled);    ",
                      "    pm.environment.set(\"oauthEnabled\", response.oauthEnabled);",
                      "    pm.environment.set(\"provisioningEnabled\", response.provisioningEnabled);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "b954962e-a0eb-466b-bc37-3b0a4395d3ae",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "url": "{{pfAdminURL}}/pf-admin-api/v1/license",
                "description": "Used to configure Server Roles that match the license"
              },
              "response": []
            },
            {
              "name": "Server Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37cd23c7-5a5a-4834-bc81-9210b59a4074",
                    "exec": [
                      "pm.test(\"Server Settings Configured\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a400b408-df00-44e0-91c1-a96af12aaa85",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c79693af-1413-4df0-976e-994154dd3dd9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"contactInfo\": {\n    \"company\": \"PF Demo\"\n  },\n  \"rolesAndProtocols\": {\n    \"oauthRole\": {\n      \"enableOauth\": {{oauthEnabled}},\n      \"enableOpenIdConnect\": {{oauthEnabled}}\n    },\n    \"idpRole\": {\n      \"enable\": true,\n      \"saml20Profile\": {\n        \"enable\": true,\n        \"enableAutoConnect\": false\n      },\n      \"enableOutboundProvisioning\": {{provisioningEnabled}},\n      \"enableSaml11\": false,\n      \"enableSaml10\": false,\n      \"enableWsFed\": true,\n      \"enableWsTrust\": {{wsTrustEnabled}}\n    },\n    \"spRole\": {\n      \"enable\": true,\n      \"saml20Profile\": {\n        \"enable\": true,\n        \"enableXASP\": false,\n        \"enableAutoConnect\": false\n      },\n      \"enableSaml11\": false,\n      \"enableSaml10\": false,\n      \"enableWsFed\": false,\n      \"enableWsTrust\": false,\n      \"enableOpenIDConnect\": true,\n      \"enableInboundProvisioning\": false\n    },\n    \"enableIdpDiscovery\": false\n  },\n  \"federationInfo\": {\n    \"baseUrl\": \"{{pfBaseURL}}\",\n    \"saml2EntityId\": \"{{pfBaseURL}}\",\n    \"autoConnectEntityId\": \"{{pfBaseURL}}\",\n    \"saml1xIssuerId\": \"{{pfBaseURL}}\",\n    \"wsfedRealm\": \"{{pfBaseURL}}\"\n  }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/serverSettings",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=vko1564002972919.html"
              },
              "response": []
            },
            {
              "name": "Add Signing Cert",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f99d64af-a643-4445-bcac-fe0d289c4817",
                    "exec": [
                      "pm.test(\"Signing Cert created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "2d0af0d2-5fa9-4b3d-b37e-f96e9d204f60",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"signing-cert\",\n  \"commonName\": \"pingfederate\",\n  \"organization\": \"Ping Identity\",\n  \"country\": \"US\",\n  \"validDays\": \"1825\",\n  \"keyAlgorithm\": \"RSA\",\n  \"keySize\": \"2048\",\n  \"signatureAlgorithm\": \"SHA256withRSA\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/keyPairs/signing/generate",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=uci1564002984974.html"
              },
              "response": []
            },
            {
              "name": "Create Extended Propery",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8b05293b-0945-4079-8094-f921b962ca35",
                    "exec": [
                      "pm.test(\"Extended Property Created\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1317b2be-a226-4649-96bd-a59fa0f06c98",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"name\": \"authNexp\",\n      \"description\": \"Authentication Experience\",\n      \"multiValued\": \"false\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/extendedProperties",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=uut1564002974579.html"
              },
              "response": []
            },
            {
              "name": "Add `pingfederate` as Virtual Host Name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d2d7a1be-be2d-4600-9bd3-d0bb12edd3ed",
                    "exec": [
                      "pm.test(\"Virtual Host Created\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "be4795d5-0553-4c99-a3e7-84995577d9df",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"virtualHostNames\": [\n    \"pingfederate\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/virtualHostNames",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=muj1564002974462.html\n\nThis is used to accept backchannel calls from other services in the stack"
              },
              "response": []
            }
          ],
          "_postman_id": "b251b0d8-2324-4208-a703-e0deeda17db6",
          "description": "This folder contains calls to do the initial configuration of the Server:\n\n* Accept the EULA\n* Add Admin account for API calls\n* Match the Roles & Protocols to the installed license\n* Add a Signing Certificate\n* Add Extended Property\n* Add Virtual Host for `pingfederate` to enable any backchannel calls\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2db108d5-3306-43e1-b2bc-a7f632d2dc32",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "f8c7d200-9864-40c6-9cea-6a7dc3ec2dc7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "System Config - Datastore \\ Config Store (PD) \\ PD PCV",
          "item": [
            {
              "name": "Create base DataStore",
              "item": [
                {
                  "name": "Add Datastore - PD",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7c855f38-dfee-4e47-b7d8-7e230cd38dd3",
                        "exec": [
                          "pm.test(\"PD Datastore Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ebfe285f-4e8a-4348-9a68-d35a301635e3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"type\": \"LDAP\",\n      \"id\": \"LDAP-PingDirectory\",\n      \"maskAttributeValues\": false,\n      \"hostnames\": [\n        \"pingdirectory\"\n      ],\n      \"ldapType\": \"PING_DIRECTORY\",\n      \"bindAnonymously\": false,\n      \"userDN\": \"cn=pingfederate\",\n\t  \"password\": \"{{pfAdminPwd}}\",\n      \"useSsl\": false,\n      \"useDnsSrvRecords\": false,\n      \"name\": \"PingDirectory\",\n      \"testOnBorrow\": false,\n      \"testOnReturn\": false,\n      \"createIfNecessary\": true\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/dataStores",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=obh1564002976555.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9a57a2af-23ae-4116-9299-88f322690491",
              "description": "Adds PD as a datastore",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "d92cd655-f7e1-4101-a792-4662801527fd",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "480361d3-2863-4eec-b6aa-5e753be5e7ee",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Config-Store API",
              "item": [
                {
                  "name": "Set PD for OAuth Clients",
                  "item": [
                    {
                      "name": "Set PD for OAuth Clients",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdd58167-fbbf-4eac-b0db-adb10cdda528",
                            "exec": [
                              "pm.test(\"OAuth Clients in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "928cc2cd-aaa0-467c-be78-fce01870b640",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"PingFederateDSJNDIName\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"LDAP-PingDirectory\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.domain.ClientManagerLdapImpl/PingFederateDSJNDIName"
                      },
                      "response": []
                    },
                    {
                      "name": "Set SearchBase for  OAuth Clients",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "bdd58167-fbbf-4eac-b0db-adb10cdda528",
                            "exec": [
                              "pm.test(\"OAuth Clients in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "35ec67cc-4802-443f-8882-ad65a7e62fbc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"SearchBase\",\n    \"type\": \"STRING\",\n    \"stringValue\": \"ou=oauthClients,{{userBaseDN}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.domain.ClientManagerLdapImpl/SearchBase"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "754893c9-372c-4e45-bc1e-8b1fa8a3002a",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Set PD for OAuth Grants",
                  "item": [
                    {
                      "name": "Set PD for OAuth Grants",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"OAuth Grants in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "c95ed362-610b-47fd-8277-ebf67b22d8e3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"PingFederateDSJNDIName\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"LDAP-PingDirectory\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.token.AccessGrantManagerLDAPPingDirectoryImpl/PingFederateDSJNDIName"
                      },
                      "response": []
                    },
                    {
                      "name": "Set SearchBase for OAuth Grants",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"OAuth Grants in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "237bdeab-1a81-4a90-897a-ec03a12891e8",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"SearchBase\",\n    \"type\": \"STRING\",\n    \"stringValue\": \"ou=grants,{{userBaseDN}}\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.oauth20.token.AccessGrantManagerLDAPPingDirectoryImpl/SearchBase"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "fb9c6e13-51de-424c-a659-c12dedc6ea9a",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Set PD for PF AuthN Sessions",
                  "item": [
                    {
                      "name": "Set PD for Sessions",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"PF Sessions in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "d5987e11-c134-423b-9c77-aa9cfd718e81",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"PingFederateDSJNDIName\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"LDAP-PingDirectory\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.saml20.service.session.data.impl.SessionStorageManagerLdapImpl/PingFederateDSJNDIName"
                      },
                      "response": []
                    },
                    {
                      "name": "Set SearchBase for Sessions",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"PF Sessions in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "da02d6b0-c912-4ffd-9835-d9e345673e1a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "    {\n      \"id\": \"SearchBase\",\n      \"type\": \"STRING\",\n      \"stringValue\": \"ou=sessions,{{userBaseDN}}\"\n    }",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.saml20.service.session.data.impl.SessionStorageManagerLdapImpl/SearchBase"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "7c0a258f-23c6-44bc-a3cd-ffd3d879f3ae",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Enable OGNL Expressions",
                  "item": [
                    {
                      "name": "Enable OGNL Expressions",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "526c5a02-2dda-4537-bd6c-9072bb363e1e",
                            "exec": [
                              "pm.test(\"PF Sessions in PD\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "e6cab341-bf7f-447b-adc5-a82b86992e26",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"evaluateExpressions\",\n    \"type\": \"STRING\",\n    \"stringValue\": \"true\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/configStore/org.sourceid.common.ExpressionManager/evaluateExpressions"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "5eb9ce0a-b841-420b-9e25-0085ce782e3d",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "06f9d917-a0ba-4c6e-b613-7af57370a7d2",
              "description": "Calls made using the `/config-store` API to modify the server",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create PD PCV",
              "item": [
                {
                  "name": "Get BaseDN from PD",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                        "exec": [
                          "pm.test(\"BaseDN retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ac328913-6473-4472-b928-236692748cb9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": {
                        "password": "{{pdAdminPwd}}",
                        "username": "{{pdAdmin}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Add Password Credential Validator (LDAP - PD)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "3a8cf566-6b2a-4887-ac6f-f7e702cb3476",
                        "exec": [
                          "pm.test(\"LDAP PCV Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "750e1feb-849f-455f-899a-ae7f9e3ddaff",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"PDPCV\",\n  \"name\": \"PD PCV\",\n  \"pluginDescriptorRef\": {\n  \"id\": \"org.sourceid.saml20.domain.LDAPUsernamePasswordCredentialValidator\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Authentication Error Overrides\",\n        \"rows\": []\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"LDAP Datastore\",\n        \"value\": \"LDAP-PingDirectory\"\n      },\n      {\n        \"name\": \"Search Base\",\n        \"value\": \"{{userBaseDN}}\"\n      },\n      {\n        \"name\": \"Search Filter\",\n        \"value\": \"(|(uid=${username})(mail=${username}))\"\n      },\n      {\n        \"name\": \"Scope of Search\",\n        \"value\": \"Subtree\"\n      },\n      {\n        \"name\": \"Case-Sensitive Matching\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Display Name Attribute\",\n        \"value\": \"displayName\"\n      },\n      {\n        \"name\": \"Mail Attribute\",\n        \"value\": \"mail\"\n      },\n      {\n        \"name\": \"SMS Attribute\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"PingID Username Attribute\",\n        \"value\": \"uid\"\n      },\n      {\n        \"name\": \"Mail Search Filter\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Username Attribute\",\n        \"value\": \"uid\"\n      },\n      {\n        \"name\": \"Mail Verified Attribute\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"mail\"\n      },\n      {\n        \"name\": \"givenName\"\n      },\n      {\n        \"name\": \"DN\"\n      },\n      {\n        \"name\": \"username\"\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"entryUUID\"\n      },\n      {\n        \"name\": \"uid\"\n      },\n      {\n        \"name\": \"isMemberOf\"\n      },\n      {\n        \"name\": \"sn\"\n      }\n    ]\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/passwordCredentialValidators",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=obh1564002976555.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "0faa6d12-b500-44dc-88f5-6c843c874ef8",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "91ead653-5257-403e-8c6d-e9f13cec4297",
          "description": "These calls configure the System for PingDirectory for Users and Configuration.\n\nAdds the following:\n\n* Datastore\n* Password Credential Validator\n\nIn the `50-before-post-start.sh` hook (`/pingfed/hooks`) the values in `hivemodule.xml` are swapped out for LDAP providers. The `/config-store` API is then used to configure those providers. \n\nThis enables PD as the store for:  \n\n* OAuth Clients\n* OAuth Grants\n* PF AuthN Sessions\n\n`config-store` API also used to:\n* Enable OGNL Expressions",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "9c34f025-1678-4334-83f4-7b5866da0ffb",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "9f3681e1-3fae-4abb-a5e8-e5ac2388c8cf",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "IDP Config",
          "item": [
            {
              "name": "Create AuthN Policy Contracts",
              "item": [
                {
                  "name": "Create Default AuthN Policy Contract",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                        "exec": [
                          "pm.test(\"Policy Contract (HTML) Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e2606c88-e75f-4ec1-a074-60a83c1eae66",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"defaultPolicyContract\",\n      \"name\": \"Default Policy Contract\",\n      \"coreAttributes\": [\n        {\n          \"name\": \"subject\"\n        }\n      ],\n      \"extendedAttributes\": [\n        {\n          \"name\": \"ImmutableID\"\n        },\n        {\n          \"name\": \"mail\"\n        },\n        {\n          \"name\": \"givenName\"\n        },\n        {\n          \"name\": \"sn\"\n        },\n        {\n          \"name\": \"memberOf\"\n        }\n      ]\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicyContracts",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=udz1564002989838.html\n\nCreates Policy Contract that has the minimum information for O365 and PingOne for Enterprise"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2f2dee3f-a2dc-430d-a22f-5c3ad8cc5c8a",
              "description": "A single Policy Contract is used with an **Extended Properties** Selector controlling the branch taken.\n\nThis contract is configured with the following attributes:\n\n* `subject`\n* `ImmutableID`\n* `mail`\n* `givenName`\n* `sn`\n* `memberOf`\n\nThis should be sufficient to configure connections to:\n* PingOne for Enterprise\n* Office365",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Extended Property Selector - AuthN Exp",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2eeefba3-473e-41a4-91b7-85321fd28393",
                    "exec": [
                      "pm.test(\"Extended Property Selector Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3fe18c4c-283c-46be-b016-4635067227c7",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "09c83f14-4f2b-41fa-8f10-5d07a3ba87e1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"authnExp\",\n    \"name\": \"AuthN Experience\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.pf.selectors.ExtendedPropertyAuthnSelector\"\n    },\n    \"configuration\": {\n        \"tables\": [],\n        \"fields\": [\n            {\n                \"name\": \"Extended Property\",\n                \"value\": \"authNexp\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"extendedAttributes\": [\n            {\n                \"name\": \"Basic\"\n            },\n            {\n                \"name\": \"MFA\"\n            },\n            {\n                \"name\": \"Passwordless\"\n            }\n        ]\n    }\n}",
                  "options": {}
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationSelectors",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ndr1564002987357.html"
              },
              "response": []
            },
            {
              "name": "Enable IdP AuthN Policies",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4f14cf69-4857-4f29-b857-d41ad98f72a3",
                    "exec": [
                      "pm.test(\"IdP AuthN Policies Enabled\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "09b5b736-e3ce-48c9-bf30-5e8507af3a48",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "value": "PingFederate",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"enableIdpAuthnSelection\": true,\n  \"enableSpAuthnSelection\": false\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicies/settings"
              },
              "response": []
            }
          ],
          "_postman_id": "1728beef-dbed-4b18-af9b-389c5d281052",
          "description": "Calls to setup the things to be used in the IDP\n\n* PD PCV\n* Default AuthN Policy Contract\n* Extended Property - `authnExp`\n* Extended Property Selector (`Basic` \\ `MFA` \\ `Passwordless`)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0e967485-03db-4214-92f1-8b541d227115",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b3f4095a-64ed-43fb-afe1-d3ccef6d26b7",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "OAuth Config - AS Settings",
          "item": [
            {
              "name": "Configure AS Settings",
              "item": [
                {
                  "name": "Configure AS Settings",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dd235f96-6f1f-4407-a764-215c3716cda8",
                        "exec": [
                          "pm.test(\"OAuth AS configured\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "249c9073-a746-4ff6-a7cd-073bdbfccf95",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"authorizationCodeTimeout\": 60,\n  \"authorizationCodeEntropy\": 30,\n  \"persistentGrantIdleTimeout\": 30,\n  \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n  \"refreshTokenLength\": 42,\n  \"rollRefreshTokenValues\": false,\n  \"refreshRollingInterval\": 0,\n  \"persistentGrantReuseGrantTypes\": [\n    \"IMPLICIT\"\n  ],\n  \"persistentGrantContract\": {\n    \"extendedAttributes\": [],\n    \"coreAttributes\": [\n      {\n        \"name\": \"USER_KEY\"\n      },\n      {\n        \"name\": \"USER_NAME\"\n      }\n    ]\n  },\n  \"bypassAuthorizationForApprovedGrants\": false,\n  \"allowUnidentifiedClientROCreds\": false,\n  \"allowUnidentifiedClientExtensionGrants\": false,\n  \"tokenEndpointBaseUrl\": \"\",\n  \"userAuthorizationUrl\": \"\",\n  \"registeredAuthorizationPath\": \"\",\n  \"pendingAuthorizationTimeout\": 600,\n  \"bypassActivationCodeConfirmation\": false,\n  \"devicePollingInterval\": 5,\n  \"userAuthorizationConsentPageSetting\": \"INTERNAL\",\n  \"atmIdForOAuthGrantManagement\": \"\",\n  \"scopeForOAuthGrantManagement\": \"\",\n  \"allowedOrigins\": [\n  ],\n  \"trackUserSessionsForLogout\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ird1564002990806.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "b52c47dd-86cd-4b33-ac84-c19e3126be17",
              "description": "Add CORS for Delegator",
              "_postman_isSubFolder": true
            },
            {
              "name": "Scope Management",
              "item": [
                {
                  "name": "Common OIDC Scopes",
                  "item": [
                    {
                      "name": "OIDC Scope - openid",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d811d801-bc60-4dae-acfc-2718352313f9",
                            "exec": [
                              "pm.test(\"Scope (openid) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "0e23088c-f018-4d02-8f42-76142a0e128f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"openid\",\n  \"description\": \"Used to authenticated with OIDC\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - address",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "58ab8f47-2136-4bc6-b45f-f987aeaa2b92",
                            "exec": [
                              "pm.test(\"Scope (address) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "cc97600c-deb5-48ff-8737-45430dcff7cc",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"address\",\n  \"description\": \"Used to access your postal address\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - email",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1cd8f58d-2dc3-4cf3-88b8-d678390c12ca",
                            "exec": [
                              "pm.test(\"Scope (email) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "01b501c4-4711-4d4a-bcde-6b78f8b72347",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"email\",\n  \"description\": \"Used to access your email address\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - phone",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1bc376ac-f0f6-41dc-a893-bf17e158fd8b",
                            "exec": [
                              "pm.test(\"Scope (phone) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "8e80e4b9-92de-44fb-acba-d6f2c608d1a0",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"phone\",\n  \"description\": \"Used to access your phone number\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    },
                    {
                      "name": "OIDC Scope - profile",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "186cebf3-76f8-4a06-aaae-793276f77cbf",
                            "exec": [
                              "pm.test(\"Scope (profile) Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "5b916ed5-06ef-4c68-ad87-ab4e2c66270e",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-XSRF-Header",
                            "type": "text",
                            "value": "pingfederate"
                          },
                          {
                            "key": "Content-Type",
                            "type": "text",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"profile\",\n  \"description\": \"Used to access your profile\",\n  \"dynamic\": \"false\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings/scopes/commonScopes"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "89c2f01b-e4b2-46b5-81e0-52c1bac602ce",
                  "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=rbk1564002990993.html\n\nCreates the basic OIDC Scopes:\n\n* openid\n* address\n* email\n* phone\n* profile",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "f0418147-48f6-4f2e-ae11-34d93bd31496",
              "description": "Creates a base set of scopes for OIDC and Ping integrations",
              "_postman_isSubFolder": true
            },
            {
              "name": "Grant Mapping",
              "item": [
                {
                  "name": "Create APC mapping - Default Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "736f229e-688f-4dcf-b4bb-641f6c1e7dde",
                        "exec": [
                          "pm.test(\"Grant Mapping Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "125575e8-47c8-434b-b8a2-b43a9c6e7a93",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"attributeSources\": [],\n      \"attributeContractFulfillment\": {\n        \"USER_NAME\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"subject\"\n        },\n        \"USER_KEY\": {\n          \"source\": {\n            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n          },\n          \"value\": \"ImmutableID\"\n        }\n      },\n      \"issuanceCriteria\": {\n        \"conditionalCriteria\": []\n      },\n      \"authenticationPolicyContractRef\": {\n        \"id\": \"defaultPolicyContract\"\n      }\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authenticationPolicyContractMappings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=enh1564002993753.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "0ec94252-894e-42c0-976f-89e09f4da6bc",
              "description": "Configuration of Grant Management\n\n* Default AuthN Policy Contract",
              "_postman_isSubFolder": true
            },
            {
              "name": "Token Managers",
              "item": [
                {
                  "name": "Create JWT Token Manager",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3639a176-e3c5-4e1f-babc-d998991cfe6b",
                        "exec": [
                          "pm.test(\"Access Token Manager (JWT) Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "07a46a67-0ab7-4f06-9cd3-a6bea738b397",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"jwtDefault\",\n  \"name\": \"JWT-Default\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.pf.access.token.management.plugins.JwtBearerAccessTokenManagementPlugin\"\n  },\n  \"configuration\": {\n    \"tables\": [\n      {\n        \"name\": \"Symmetric Keys\",\n        \"rows\": []\n      },\n      {\n        \"name\": \"Certificates\",\n        \"rows\": [\n          {\n            \"fields\": [\n              {\n                \"name\": \"Key ID\",\n                \"value\": \"cert\"\n              },\n              {\n                \"name\": \"Certificate\",\n                \"value\": \"signing-cert\"\n              }\n            ],\n            \"defaultRow\": false\n          }\n        ]\n      }\n    ],\n    \"fields\": [\n      {\n        \"name\": \"Token Lifetime\",\n        \"value\": \"120\"\n      },\n      {\n        \"name\": \"JWS Algorithm\",\n        \"value\": \"RS256\"\n      },\n      {\n        \"name\": \"Active Symmetric Key ID\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Active Signing Certificate Key ID\",\n        \"value\": \"cert\"\n      },\n      {\n        \"name\": \"JWE Algorithm\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWE Content Encryption Algorithm\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Active Symmetric Encryption Key ID\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Asymmetric Encryption Key\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Asymmetric Encryption JWKS URL\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Include Key ID Header Parameter\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Include X.509 Thumbprint Header Parameter\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Default JWKS URL Cache Duration\",\n        \"value\": \"720\"\n      },\n      {\n        \"name\": \"Include JWE Key ID Header Parameter\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Include JWE X.509 Thumbprint Header Parameter\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Client ID Claim Name\",\n        \"value\": \"client_id\"\n      },\n      {\n        \"name\": \"Scope Claim Name\",\n        \"value\": \"scope\"\n      },\n      {\n        \"name\": \"Space Delimit Scope Values\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Issuer Claim Value\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Audience Claim Value\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWT ID Claim Length\",\n        \"value\": \"0\"\n      },\n      {\n        \"name\": \"Access Grant GUID Claim Name\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWKS Endpoint Path\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"JWKS Endpoint Cache Duration\",\n        \"value\": \"720\"\n      },\n      {\n        \"name\": \"Publish Key ID X.509 URL\",\n        \"value\": \"true\"\n      },\n      {\n        \"name\": \"Publish Thumbprint X.509 URL\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Expand Scope Groups\",\n        \"value\": \"false\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"sub\"\n      }\n    ]\n  },\n  \"selectionSettings\": {\n    \"resourceUris\": []\n  },\n  \"accessControlSettings\": {\n    \"restrictClients\": false,\n    \"allowedClients\": []\n  },\n  \"sessionValidationSettings\": {\n    \"checkValidAuthnSession\": false,\n    \"checkSessionRevocationStatus\": false,\n    \"updateAuthnSessionActivity\": false\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/accessTokenManagers",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=srl1564002994713.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "049505a8-f385-4190-bc0d-a6bd7298cb16",
              "description": "Configures the OAuth Token Mapping settings\n\n* Adds Default JWT Token Manager (Symmetric Key)\n* Adds AuthN Policy Contract Mapping",
              "_postman_isSubFolder": true
            },
            {
              "name": "Token Mappings",
              "item": [
                {
                  "name": "Create JWT Token Mapping to AuthN Policy Contract",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2b96e74c-7011-49d6-add6-37c1a46ed2c6",
                        "exec": [
                          "pm.test(\"Access Token Mapping Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "5df4c477-cccd-42f4-8076-60b6f20e1a28",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"context\": {\n    \"type\": \"AUTHENTICATION_POLICY_CONTRACT\",\n    \"contextRef\": {\n      \"id\": \"defaultPolicyContract\"\n    }\n  },\n  \"accessTokenManagerRef\": {\n    \"id\": \"jwtDefault\"\n  },\n  \"attributeContractFulfillment\": {\n    \"sub\": {\n      \"source\": {\n        \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n      },\n      \"value\": \"subject\"\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/accessTokenMappings",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=jfx1564002995189.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "d41a22b4-cc65-41d7-a824-77fca4d21209",
              "_postman_isSubFolder": true
            },
            {
              "name": "OIDC Policy",
              "item": [
                {
                  "name": "Create OIDC Policy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4aa206d6-cc0b-49c2-83a2-ddfdd4de1b6b",
                        "exec": [
                          "pm.test(\"OIDC Policy Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fb66d2bf-4a42-4fa6-b374-268a6501782a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingdfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"OIDCPolicyDefault\",\n    \"name\": \"Default OIDC Policy\",\n    \"idTokenLifetime\": 5,\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"sub\"\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"address\"\n            },\n            {\n                \"name\": \"phone_number\"\n            },\n            {\n                \"name\": \"email\"\n            },\n            {\n                \"name\": \"last_name\"\n            },\n            {\n                \"name\": \"first_name\"\n            }\n        ]\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [\n            {\n                \"type\": \"LDAP\",\n                \"dataStoreRef\": {\n                    \"id\": \"LDAP-PingDirectory\"\n                },\n                \"id\": \"PD\",\n                \"description\": \"PD\",\n                \"baseDn\": \"{{userBaseDN}}\",\n                \"searchScope\": \"SUBTREE\",\n                \"searchFilter\": \"uid=${sub}\",\n                \"binaryAttributeSettings\": {},\n                \"memberOfNestedGroup\": false\n            }\n        ],\n        \"attributeContractFulfillment\": {\n            \"sub\": {\n                \"source\": {\n                    \"type\": \"TOKEN\"\n                },\n                \"value\": \"sub\"\n            },\n            \"address\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"postalAddress\"\n            },\n            \"phone_number\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"telephoneNumber\"\n            },\n            \"email\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"mail\"\n            },\n            \"first_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"givenName\"\n            },\n            \"last_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"sn\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    },\n    \"includeSriInIdToken\": false,\n    \"includeUserInfoInIdToken\": false,\n    \"includeSHashInIdToken\": false,\n    \"returnIdTokenOnRefreshGrant\": false,\n    \"accessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"scopeAttributeMappings\": {}\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/openIdConnect/policies",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dkd1564002996125.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "68a339df-6759-4043-9618-d147bc7cae08",
              "description": "Creates a basic OIDC Policy.\n\nContains only the `sub` claim",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "ccf17ca6-f93c-4d95-b9a2-39147bf8e7c3",
          "description": "This folder contains calls to configure the AS Server:\n\n**Scope Management**\n* Common OIDC Scopes\n\n**Grant Mapping**\n* Default AuthN Policy Contract Mapping\n\n**Access Tokens**\n* JWT Access Token Manager\n* Default AuthN Policy Contract Mapping\n\n**OIDC Policy**\n* Default OIDC Policy\n",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8850f13f-df87-4530-b114-0686c9ccd5c8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "688e1869-1e7f-43e7-9554-57942c2a89e2",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "98763e37-51f8-4316-b9d3-015346df7b1e",
      "description": "This collection does a common base config for PingFed - these are leveraged by additional Use Cases.\n\nThe collection assumes a vanilla install of PF and will create an Admin account to be use for these calls.\n\n* Make sure PF is running\n* Initial Configs\n* Configure PD as config store\n* Configure Identity Provider role\n* Configure OAuth Authorization Server role\n",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "a1fb8d47-c606-4bc6-922d-cbe55420deb8",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "cc22d39e-222d-4074-8040-615b251ac342",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Workforce - AD Authentication",
      "item": [
        {
          "name": "Configure PF",
          "item": [
            {
              "name": "System Config - Datastore \\ Config Store",
              "item": [
                {
                  "name": "Create ActiveDirectory Config",
                  "item": [
                    {
                      "name": "Add Datastore - AD",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "7c855f38-dfee-4e47-b7d8-7e230cd38dd3",
                            "exec": [
                              "pm.test(\"AD Datastore Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "daf9b5d8-8978-425d-a242-e3962d53a7f4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "PingFederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"type\": \"LDAP\",\n    \"id\": \"LDAP-ActiveDirectory\",\n    \"maskAttributeValues\": false,\n    \"hostnames\": [\n        \"{{adDcHost}}\"\n    ],\n    \"ldapType\": \"ACTIVE_DIRECTORY\",\n    \"bindAnonymously\": false,\n    \"userDN\": \"{{adServiceAccountDN}}\",\n    \"password\": \"{{adServicePwd}}\",\n    \"useSsl\": false,\n    \"useDnsSrvRecords\": false,\n    \"followLDAPReferrals\": false,\n    \"name\": \"AD\",\n    \"hostnamesTags\": [\n        {\n            \"hostnames\": [\n                \"{{adDcHost}}\"\n            ],\n            \"defaultSource\": true\n        }\n    ],\n    \"testOnBorrow\": false,\n    \"testOnReturn\": false,\n    \"createIfNecessary\": true,\n    \"verifyHost\": false,\n    \"minConnections\": 10,\n    \"maxConnections\": 100,\n    \"maxWait\": -1,\n    \"timeBetweenEvictions\": 60000,\n    \"readTimeout\": 3000,\n    \"connectionTimeout\": 3000,\n    \"binaryAttributes\": [\n        \"ms-ds-ConsistencyGUID\"\n    ],\n    \"dnsTtl\": 60000,\n    \"ldapDnsSrvPrefix\": \"_ldap._tcp\",\n    \"ldapsDnsSrvPrefix\": \"_ldaps._tcp\"\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/dataStores",
                        "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dkd1564002996125.html"
                      },
                      "response": []
                    },
                    {
                      "name": "Add Password Credential Validator (LDAP - AD)",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "3a8cf566-6b2a-4887-ac6f-f7e702cb3476",
                            "exec": [
                              "pm.test(\"LDAP PCV Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "ba6dd25f-ab07-43e4-a2c6-0e9cc44b5679",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "PingFederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"ADPCV\",\n    \"name\": \"AD PCV\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"org.sourceid.saml20.domain.LDAPUsernamePasswordCredentialValidator\"\n    },\n    \"configuration\": {\n        \"tables\": [\n            {\n                \"name\": \"Authentication Error Overrides\",\n                \"rows\": []\n            }\n        ],\n        \"fields\": [\n            {\n                \"name\": \"LDAP Datastore\",\n                \"value\": \"LDAP-ActiveDirectory\"\n            },\n            {\n                \"name\": \"Search Base\",\n                \"value\": \"{{adBaseDN}}\"\n            },\n            {\n                \"name\": \"Search Filter\",\n                \"value\": \"(|(sAMAccountName=${username})(userPrincipalName=${username}))\"\n            },\n            {\n                \"name\": \"Scope of Search\",\n                \"value\": \"Subtree\"\n            },\n            {\n                \"name\": \"Case-Sensitive Matching\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Display Name Attribute\",\n                \"value\": \"displayName\"\n            },\n            {\n                \"name\": \"Mail Attribute\",\n                \"value\": \"mail\"\n            },\n            {\n                \"name\": \"SMS Attribute\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"PingID Username Attribute\",\n                \"value\": \"userPrincipalName\"\n            },\n            {\n                \"name\": \"Mail Search Filter\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Username Attribute\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Mail Verified Attribute\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable PingDirectory Detailed Password Policy Requirement Messaging\",\n                \"value\": \"false\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"mail\"\n            },\n            {\n                \"name\": \"givenName\"\n            },\n            {\n                \"name\": \"DN\"\n            },\n            {\n                \"name\": \"username\"\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"mS-DS-ConsistencyGuid\"\n            },\n            {\n                \"name\": \"sn\"\n            },\n            {\n                \"name\": \"memberOf\"\n            },\n            {\n                \"name\": \"userPrincipalName\"\n            }\n        ]\n    }\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/passwordCredentialValidators",
                        "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=obh1564002976555.html"
                      },
                      "response": []
                    },
                    {
                      "name": "Add Kerberos Realm",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                            "exec": [
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "3a8cf566-6b2a-4887-ac6f-f7e702cb3476",
                            "exec": [
                              "pm.test(\"LDAP PCV Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "b1a18d39-847c-45ba-a164-50f327058ab4",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "PingFederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"KERB-Workforce\",\n    \"kerberosRealmName\": \"{{adKerbRealm}}\",\n    \"keyDistributionCenters\": [\n        \"{{adDcHost}}\"\n    ],\n    \"kerberosUsername\": \"pingfederate\",\n    \"kerberosPassword\": \"{{pfServicePwd}}\",\n    \"suppressDomainNameConcatenation\": false\n}",
                          "options": {
                            "raw": {}
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/kerberos/realms",
                        "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=cma1564002979158.html"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "2666bb09-25cf-487e-ad32-af5b9fff2598",
                  "description": "* LDAP Datastore\n* LDAP Password Credential Validator\n* Kerberos Realm",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "5b35039f-fb05-4d29-bd70-4a2cfbf90197",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "8a4afaf7-4648-4114-a548-b8a4ad116b7b",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "47e28c39-5100-48ad-beec-fdd7b3b34e31",
              "description": "These calls configure the System for PingDirectory for Users and Configuration.\n\nAdds the following:\n\n* Datastore\n* Password Credential Validator\n\nIn the `50-before-post-start.sh` hook (`/pingfed/hooks`) the values in `hivemodule.xml` are swapped out for LDAP providers. The `/config-store` API is then used to configure those providers. \n\nThis enables PD as the store for:  \n\n* OAuth Clients\n* OAuth Grants\n* PF AuthN Sessions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9c34f025-1678-4334-83f4-7b5866da0ffb",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9f3681e1-3fae-4abb-a5e8-e5ac2388c8cf",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "IDP Config - Adapters",
              "item": [
                {
                  "name": "Create Adapter - PingID",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          "var pidBase64 = btoa(pm.environment.get('pingId'));",
                          "",
                          "pm.environment.set('encodedPingID', pidBase64);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"PID Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "36f37051-3749-4dfe-9dd7-7d96ab18c6b6",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "       {\n            \"id\": \"PingID\",\n            \"name\": \"PingID\",\n            \"pluginDescriptorRef\": {\n                \"id\": \"com.pingidentity.adapters.pingid.PingIDAdapter\"\n            },\n            \"configuration\": {\n        \"tables\": [],\n        \"fields\": [\n          {\n            \"name\": \"PingID Properties\",\n            \"value\": \"{{encodedPingID}}\"\n          },\n          {\n            \"name\": \"LDAP Data source\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Query Directory\",\n            \"value\": \"false\"\n          },\n          {\n            \"name\": \"Base Domain\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Filter\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"LDAP Search Scope\",\n            \"value\": \"3\"\n          },\n          {\n            \"name\": \"fname attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"lname attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"email attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"group attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"phone attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"YubiKey attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Secondary email attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Voice number attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"State attribute\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"PingID Heartbeat Timeout\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Authentication During Errors\",\n            \"value\": \"REJECT\"\n          },\n          {\n            \"name\": \"Users without a paired device\",\n            \"value\": \"block\"\n          },\n          {\n            \"name\": \"LDAP Data Source For Devices\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Create entry for devices\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Encryption Key For Devices\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"Distinguished Name Pattern\",\n            \"value\": \"\"\n          },\n          {\n            \"name\": \"HTML Template\",\n            \"value\": \"pingid.offline.auth.login.template.html\"\n          },\n          {\n            \"name\": \"Cookie Duration\",\n            \"value\": \"1\"\n          },\n          {\n            \"name\": \"PingID Properties File Name\",\n            \"value\": \"pingid.properties\"\n          },\n          {\n            \"name\": \"Refresh UserId Cookie\",\n            \"value\": \"false\"\n          },\n          {\n            \"name\": \"Require PingID Registration\",\n            \"value\": \"false\"\n          }\n        ]\n      },\n      \"attributeContract\": {\n        \"coreAttributes\": [\n          {\n            \"name\": \"org.sourceid.saml20.adapter.idp.authn.authnCtx\",\n            \"masked\": false,\n            \"pseudonym\": false\n          },\n          {\n            \"name\": \"pingid_state\",\n            \"masked\": false,\n            \"pseudonym\": false\n          },\n          {\n            \"name\": \"subject\",\n            \"masked\": false,\n            \"pseudonym\": true\n          }\n        ],\n        \"extendedAttributes\": [],\n        \"maskOgnlValues\": false\n      },\n      \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n          \"org.sourceid.saml20.adapter.idp.authn.authnCtx\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"org.sourceid.saml20.adapter.idp.authn.authnCtx\"\n          },\n          \"pingid_state\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"pingid_state\"\n          },\n          \"subject\": {\n            \"source\": {\n              \"type\": \"ADAPTER\"\n            },\n            \"value\": \"subject\"\n          }\n        },\n        \"issuanceCriteria\": {\n          \"conditionalCriteria\": []\n        }\n      }\n    }",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters"
                  },
                  "response": []
                },
                {
                  "name": "Create Adapter - Kerberos",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"Kerberos Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d5e9d72c-00f4-4732-9974-db72fc548014",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"Kerberos\",\n  \"name\": \"Kerberos\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.kerberos.idp.KerberosAuthenticationAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [],\n    \"fields\": [\n      {\n        \"name\": \"Domain/Realm Name\",\n        \"value\": \"KERB-Workforce\"\n      },\n      {\n        \"name\": \"Error URL Redirect\",\n        \"value\": \"\"\n      },\n      {\n        \"name\": \"Error Template\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Authentication Context Value\",\n        \"value\": \"\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"Domain/Realm Name\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"SIDs\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"Username\",\n        \"masked\": false,\n        \"pseudonym\": true\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"mail\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"givenName\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"mS-DS-ConsistencyGuid\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"sn\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"memberOf\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"userPrincipalName\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"LDAP\",\n        \"dataStoreRef\": {\n          \"id\": \"LDAP-ActiveDirectory\"\n        },\n        \"id\": \"AD\",\n        \"description\": \"AD\",\n        \"baseDn\": \"{{adBaseDN}}\",\n        \"searchScope\": \"SUBTREE\",\n        \"searchFilter\": \"(|(sAMAccountName = ${Username})(userPrincipalName=${Username}))\",\n        \"binaryAttributeSettings\": {\n          \"ms-ds-ConsistencyGUID\": {\n            \"binaryEncoding\": \"BASE64\"\n          }\n        },\n        \"memberOfNestedGroup\": false\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"Domain/Realm Name\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"Domain/Realm Name\"\n      },\n      \"SIDs\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"SIDs\"\n      },\n      \"mail\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"mail\"\n      },\n      \"Username\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"Username\"\n      },\n      \"givenName\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"givenName\"\n      },\n      \"mS-DS-ConsistencyGuid\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"mS-DS-ConsistencyGuid\"\n      },\n      \"memberOf\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"memberOf\"\n      },\n      \"sn\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"sn\"\n      },\n      \"userPrincipalName\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"userPrincipalName\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ykt1564003023206.html"
                  },
                  "response": []
                },
                {
                  "name": "Create Adapter - HTML Form",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"HTML Form Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "17bc422e-1f46-4d2c-8076-abc446ee48e5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "PingFederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"HTMLForm\",\n    \"name\": \"HTML Form\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter\"\n    },\n    \"configuration\": {\n        \"tables\": [\n            {\n                \"name\": \"Credential Validators\",\n                \"rows\": [\n                    {\n                        \"fields\": [\n                            {\n                                \"name\": \"Password Credential Validator Instance\",\n                                \"value\": \"ADPCV\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"fields\": [\n            {\n                \"name\": \"Challenge Retries\",\n                \"value\": \"3\"\n            },\n            {\n                \"name\": \"Session State\",\n                \"value\": \"None\"\n            },\n            {\n                \"name\": \"Session Timeout\",\n                \"value\": \"60\"\n            },\n            {\n                \"name\": \"Session Max Timeout\",\n                \"value\": \"480\"\n            },\n            {\n                \"name\": \"Allow Password Changes\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Password Management System\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable 'Remember My Username'\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Enable 'This is My Device'\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Change Password Email Notification\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Show Password Expiring Warning\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Password Reset Type\",\n                \"value\": \"PingID\"\n            },\n            {\n                \"name\": \"Account Unlock\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Local Identity Profile\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable Username Recovery\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Login Template\",\n                \"value\": \"html.form.login.template.html\"\n            },\n            {\n                \"name\": \"Logout Path\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Logout Redirect\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Logout Template\",\n                \"value\": \"idp.logout.success.page.template.html\"\n            },\n            {\n                \"name\": \"Change Password Template\",\n                \"value\": \"html.form.change.password.template.html\"\n            },\n            {\n                \"name\": \"Change Password Message Template\",\n                \"value\": \"html.form.message.template.html\"\n            },\n            {\n                \"name\": \"Password Management System Message Template\",\n                \"value\": \"html.form.message.template.html\"\n            },\n            {\n                \"name\": \"Change Password Email Template\",\n                \"value\": \"message-template-end-user-password-change.html\"\n            },\n            {\n                \"name\": \"Expiring Password Warning Template\",\n                \"value\": \"html.form.password.expiring.notification.template.html\"\n            },\n            {\n                \"name\": \"Threshold for Expiring Password Warning\",\n                \"value\": \"7\"\n            },\n            {\n                \"name\": \"Snooze Interval for Expiring Password Warning\",\n                \"value\": \"24\"\n            },\n            {\n                \"name\": \"Login Challenge Template\",\n                \"value\": \"html.form.login.challenge.template.html\"\n            },\n            {\n                \"name\": \"'Remember My Username' Lifetime\",\n                \"value\": \"30\"\n            },\n            {\n                \"name\": \"'This is My Device' Lifetime\",\n                \"value\": \"30\"\n            },\n            {\n                \"name\": \"Allow Username Edits During Chaining\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Track Authentication Time\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Post-Password Change Re-Authentication Delay\",\n                \"value\": \"0\"\n            },\n            {\n                \"name\": \"Password Reset Username Template\",\n                \"value\": \"forgot-password.html\"\n            },\n            {\n                \"name\": \"Password Reset Code Template\",\n                \"value\": \"forgot-password-resume.html\"\n            },\n            {\n                \"name\": \"Password Reset Template\",\n                \"value\": \"forgot-password-change.html\"\n            },\n            {\n                \"name\": \"Password Reset Error Template\",\n                \"value\": \"forgot-password-error.html\"\n            },\n            {\n                \"name\": \"Password Reset Success Template\",\n                \"value\": \"forgot-password-success.html\"\n            },\n            {\n                \"name\": \"Account Unlock Template\",\n                \"value\": \"account-unlock.html\"\n            },\n            {\n                \"name\": \"OTP Length\",\n                \"value\": \"8\"\n            },\n            {\n                \"name\": \"OTP Time to Live\",\n                \"value\": \"10\"\n            },\n            {\n                \"name\": \"PingID Properties\",\n                \"value\": \"{{encodedPingID}}\"\n            },\n            {\n                \"name\": \"Require Verified Email\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Username Recovery Template\",\n                \"value\": \"username.recovery.template.html\"\n            },\n            {\n                \"name\": \"Username Recovery Info Template\",\n                \"value\": \"username.recovery.info.template.html\"\n            },\n            {\n                \"name\": \"Username Recovery Email Template\",\n                \"value\": \"message-template-username-recovery.html\"\n            },\n            {\n                \"name\": \"CAPTCHA for Authentication\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Password change\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Password Reset\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Username recovery\",\n                \"value\": \"false\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"policy.action\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"username\",\n                \"masked\": false,\n                \"pseudonym\": true\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"mS-DS-ConsistencyGuid\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"userPrincipalName\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"memberOf\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"givenName\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"sn\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"mail\",\n                \"masked\": false,\n                \"pseudonym\": false\n            }\n        ],\n        \"maskOgnlValues\": false\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n            \"mS-DS-ConsistencyGuid\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"mS-DS-ConsistencyGuid\"\n            },\n            \"userPrincipalName\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"userPrincipalName\"\n            },\n            \"memberOf\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"memberOf\"\n            },\n            \"givenName\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"givenName\"\n            },\n            \"sn\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"sn\"\n            },\n            \"mail\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"mail\"\n            },\n            \"policy.action\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"policy.action\"\n            },\n            \"username\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"username\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dri1564003022949.html"
                  },
                  "response": []
                },
                {
                  "name": "Create Adapter - Identifier First",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "18654f1f-702d-45d1-b2e2-4742a2253d2e",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "1e26e9c5-34dc-4319-94d4-f12ca92fd718",
                        "exec": [
                          "pm.test(\"ID-First Adapter Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "2c9b8475-7f81-48fb-9dfd-5f15490aecac",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"IDFirst\",\n  \"name\": \"ID-First\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.identifierfirst.idp.IdentifierFirstAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [],\n    \"fields\": [\n      {\n        \"name\": \"Identifier Cookie Lifetime\",\n        \"value\": \"30\"\n      },\n      {\n        \"name\": \"Allow Cancelling Identifier Selection\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Maximum Identifiers Count\",\n        \"value\": \"5\"\n      },\n      {\n        \"name\": \"Identifier Selection Template\",\n        \"value\": \"identifier.first.template.html\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"subject\",\n        \"masked\": false,\n        \"pseudonym\": true\n      },\n      {\n        \"name\": \"domain\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"mail\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"givenName\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"mS-DS-ConsistencyGuid\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"memberOf\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"sn\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"userPrincipalName\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"LDAP\",\n        \"dataStoreRef\": {\n          \"id\": \"LDAP-ActiveDirectory\"\n        },\n        \"id\": \"AD\",\n        \"description\": \"AD\",\n        \"baseDn\": \"{{adBaseDN}}\",\n        \"searchScope\": \"SUBTREE\",\n        \"searchFilter\": \"(|(sAMAccountName=${subject})(userPrincipalName=${subject}))\",\n        \"binaryAttributeSettings\": {\n          \"ms-ds-ConsistencyGUID\": {\n            \"binaryEncoding\": \"BASE64\"\n          }\n        },\n        \"memberOfNestedGroup\": false\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"mail\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"mail\"\n      },\n      \"subject\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"subject\"\n      },\n      \"domain\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"domain\"\n      },\n      \"givenName\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"givenName\"\n      },\n      \"mS-DS-ConsistencyGuid\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"mS-DS-ConsistencyGuid\"\n      },\n      \"memberOf\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"memberOf\"\n      },\n      \"sn\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"sn\"\n      },\n      \"userPrincipalName\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"AD\"\n        },\n        \"value\": \"userPrincipalName\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=iek1564003022460.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "56564fd9-9584-488e-8c13-f82eb0db9f7f",
              "description": "These calls create the IdP Adapters:\nhttps://docs.pingidentity.com/bundle/pingfederate-100/page/ens1564002998102.html\n\n* Create LDAP (PD) PCV\n* Add IDP Adapters:\n * HTML Form\n  * PD PCV (From Use Case: PF - Initial)\n  * AD PCV\n * Kerberos\n * PingID\n * Identifier-First",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "603b6cc6-2419-4853-a9a2-bfe5d81e1d91",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "787babf8-a335-48f2-8221-7fe05e963476",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "IDP Config - AuthN Policy pre-work",
              "item": [
                {
                  "name": "Create Selectors",
                  "item": [
                    {
                      "name": "Create Extended Property Selector - Main Use Cases",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2eeefba3-473e-41a4-91b7-85321fd28393",
                            "exec": [
                              "pm.test(\"Extended Property Selector Created\", function () {",
                              "    pm.response.to.be.ok;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "b1b69e70-38ed-4454-b046-fb2f19d7799b",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "name": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          },
                          {
                            "key": "X-XSRF-Header",
                            "value": "pingfederate",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"authnExp\",\n    \"name\": \"AuthN Experience\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.pf.selectors.ExtendedPropertyAuthnSelector\"\n    },\n    \"configuration\": {\n        \"tables\": [],\n        \"fields\": [\n            {\n                \"name\": \"Extended Property\",\n                \"value\": \"authNexp\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"extendedAttributes\": [\n            {\n                \"name\": \"Basic\"\n            },\n            {\n                \"name\": \"Kerberos\"\n            },\n            {\n                \"name\": \"Passwordless\"\n            }\n        ]\n    }\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationSelectors/authnExp"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "613634ce-7995-4b16-bd24-e7a78c89fec7",
                  "description": "Replace the Ext Properties Selector to allow for WF AuthN Policies:\n\n* `Basic`\n* `Kerberos`\n* `Passwordless`",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b7442b6d-9261-42af-87c3-15fd0e4b0042",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "6d637cb9-99b1-4882-a843-7f406201cb98",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "f1b0c74d-e013-4b0d-baf0-ffee0b1a64d5",
              "description": "Calls to setup the things to be used in Policies and LIPs:\n\n* Create Default AuthN Policy Contract\n* Create Default Local Identity Profile\n* Create HTML Form Adapter with LIP",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "0e967485-03db-4214-92f1-8b541d227115",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "b3f4095a-64ed-43fb-afe1-d3ccef6d26b7",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "IDP Config - Sessions",
              "item": [
                {
                  "name": "Configure Sessions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ae78acb7-6654-43cc-9828-4c069e43317b",
                        "exec": [
                          "pm.test(\"Global Session Policy added\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "decb28a0-a317-47bb-8d53-aeb301cdbbb3",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enableSessions\": true,\n  \"persistentSessions\": true,\n  \"idleTimeoutMins\": 60,\n  \"idleTimeoutDisplayUnit\": \"MINUTES\",\n  \"maxTimeoutMins\": 480,\n  \"maxTimeoutDisplayUnit\": \"MINUTES\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/session/authenticationSessionPolicies/global"
                  },
                  "response": []
                },
                {
                  "name": "Add PingID Override",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "eb041198-282f-4559-af0e-d81f1c1abc69",
                        "exec": [
                          "pm.test(\"PingID Session Override Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "ddf94e98-bb77-4517-a1db-57a6267bc58c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "    {\n      \"id\": \"PingIDSessionOverride\",\n      \"authenticationSource\": {\n        \"type\": \"IDP_ADAPTER\",\n        \"sourceRef\": {\n          \"id\": \"PingID\"\n        }\n      },\n      \"enableSessions\": false,\n      \"persistent\": false,\n      \"timeoutDisplayUnit\": \"MINUTES\",\n      \"authnContextSensitive\": false\n    }",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/session/authenticationSessionPolicies",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=pqn1564002990312.html\n\nOverrides Global Session for PingID"
                  },
                  "response": []
                }
              ],
              "_postman_id": "ad3c5f95-216b-42ab-89c5-637033ebf3c0",
              "description": "Calls to configure the Global Sessions\n* Enable Global Sessions\n* Override PingID Adapter",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "75e125d3-5120-4cb8-93f8-4a135b3b6b1d",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a072850b-2fd3-4322-9702-015060284c4a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "IDP Config - Default AuthN Policy",
              "item": [
                {
                  "name": "Create Default Policy (AD)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "43c897b9-d3ca-403f-83f8-ae397e06abd4",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "7cbf9465-6740-4dd7-a6f1-89e0dbeefc48",
                        "exec": [
                          "pm.test(\"Default AuthN Policy Added\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7076016f-4d40-4857-a168-032964356178",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"failIfNoSelection\": false,\n  \"authnSelectionTrees\": [\n    {\n      \"rootNode\": {\n        \"action\": {\n          \"type\": \"AUTHN_SELECTOR\",\n          \"authenticationSelectorRef\": {\n            \"id\": \"authnExp\"\n          }\n        },\n        \"children\": [\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Basic\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"HTMLForm\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"AUTHN_SOURCE\",\n                  \"context\": \"Success\",\n                  \"authenticationSource\": {\n                    \"type\": \"IDP_ADAPTER\",\n                    \"sourceRef\": {\n                      \"id\": \"PingID\"\n                    }\n                  },\n                  \"inputUserIdMapping\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"HTMLForm\"\n                    },\n                    \"value\": \"userPrincipalName\"\n                  }\n                },\n                \"children\": [\n                  {\n                    \"action\": {\n                      \"type\": \"DONE\",\n                      \"context\": \"Fail\"\n                    }\n                  },\n                  {\n                    \"action\": {\n                      \"type\": \"APC_MAPPING\",\n                      \"context\": \"Success\",\n                      \"authenticationPolicyContractRef\": {\n                        \"id\": \"defaultPolicyContract\"\n                      },\n                      \"attributeMapping\": {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                          \"ImmutableID\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"mS-DS-ConsistencyGuid\"\n                          },\n                          \"mail\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"mail\"\n                          },\n                          \"subject\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"username\"\n                          },\n                          \"givenName\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"givenName\"\n                          },\n                          \"memberOf\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"memberOf\"\n                          },\n                          \"sn\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"sn\"\n                          }\n                        },\n                        \"issuanceCriteria\": {\n                          \"conditionalCriteria\": []\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Kerberos\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"Kerberos\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"AUTHN_SOURCE\",\n                  \"context\": \"Success\",\n                  \"authenticationSource\": {\n                    \"type\": \"IDP_ADAPTER\",\n                    \"sourceRef\": {\n                      \"id\": \"PingID\"\n                    }\n                  },\n                  \"inputUserIdMapping\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"Kerberos\"\n                    },\n                    \"value\": \"userPrincipalName\"\n                  }\n                },\n                \"children\": [\n                  {\n                    \"action\": {\n                      \"type\": \"DONE\",\n                      \"context\": \"Fail\"\n                    }\n                  },\n                  {\n                    \"action\": {\n                      \"type\": \"APC_MAPPING\",\n                      \"context\": \"Success\",\n                      \"authenticationPolicyContractRef\": {\n                        \"id\": \"defaultPolicyContract\"\n                      },\n                      \"attributeMapping\": {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                          \"ImmutableID\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"mS-DS-ConsistencyGuid\"\n                          },\n                          \"mail\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"mail\"\n                          },\n                          \"subject\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"Username\"\n                          },\n                          \"givenName\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"givenName\"\n                          },\n                          \"memberOf\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"memberOf\"\n                          },\n                          \"sn\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"sn\"\n                          }\n                        },\n                        \"issuanceCriteria\": {\n                          \"conditionalCriteria\": []\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Passwordless\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"IDFirst\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"AUTHN_SOURCE\",\n                  \"context\": \"Success\",\n                  \"authenticationSource\": {\n                    \"type\": \"IDP_ADAPTER\",\n                    \"sourceRef\": {\n                      \"id\": \"PingID\"\n                    }\n                  },\n                  \"inputUserIdMapping\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"IDFirst\"\n                    },\n                    \"value\": \"userPrincipalName\"\n                  }\n                },\n                \"children\": [\n                  {\n                    \"action\": {\n                      \"type\": \"DONE\",\n                      \"context\": \"Fail\"\n                    }\n                  },\n                  {\n                    \"action\": {\n                      \"type\": \"APC_MAPPING\",\n                      \"context\": \"Success\",\n                      \"authenticationPolicyContractRef\": {\n                        \"id\": \"defaultPolicyContract\"\n                      },\n                      \"attributeMapping\": {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                          \"ImmutableID\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"mS-DS-ConsistencyGuid\"\n                          },\n                          \"mail\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"mail\"\n                          },\n                          \"subject\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"subject\"\n                          },\n                          \"givenName\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"givenName\"\n                          },\n                          \"memberOf\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"memberOf\"\n                          },\n                          \"sn\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"sn\"\n                          }\n                        },\n                        \"issuanceCriteria\": {\n                          \"conditionalCriteria\": []\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      \"name\": \"Default AuthN Policy\",\n      \"description\": \"This Policy uses the Extended Properties Selector to allow easy switching between:\\r\\n* Basic (HTML + MFA)\\r\\n* Kerberos (Seamless Windows AuthN + MFA)\\r\\n* Passwordless (ID-First + MFA)\",\n      \"enabled\": true\n    },\n    {\n      \"rootNode\": {\n        \"action\": {\n          \"type\": \"AUTHN_SOURCE\",\n          \"authenticationSource\": {\n            \"type\": \"IDP_ADAPTER\",\n            \"sourceRef\": {\n              \"id\": \"HTMLForm\"\n            }\n          }\n        },\n        \"children\": [\n          {\n            \"action\": {\n              \"type\": \"DONE\",\n              \"context\": \"Fail\"\n            }\n          },\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Success\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"PingID\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"APC_MAPPING\",\n                  \"context\": \"Success\",\n                  \"authenticationPolicyContractRef\": {\n                    \"id\": \"defaultPolicyContract\"\n                  },\n                  \"attributeMapping\": {\n                    \"attributeSources\": [],\n                    \"attributeContractFulfillment\": {\n                      \"ImmutableID\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"mS-DS-ConsistencyGuid\"\n                      },\n                      \"mail\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"mail\"\n                      },\n                      \"subject\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"username\"\n                      },\n                      \"givenName\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"givenName\"\n                      },\n                      \"memberOf\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"memberOf\"\n                      },\n                      \"sn\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"sn\"\n                      }\n                    },\n                    \"issuanceCriteria\": {\n                      \"conditionalCriteria\": []\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"name\": \"Fallback Policy\",\n      \"description\": \"This Policy presents a HTML Form + MFA for things not configured with Extended Properties\",\n      \"enabled\": true\n    }\n  ],\n  \"defaultAuthenticationSources\": [],\n  \"trackedHttpParameters\": []\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicies/default",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=qmq1564002987890.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2798ea58-6c26-4b03-ae2e-6e144e6cbbcf",
              "description": "Creates a set of Authentication experiences:\n\n* Basic (HTML Form --> PingID) \n* Kerberos (Kerberos)\n* Passwordless (ID-First --> PingID)\n\nAn Extended Property Selector determines which path. You can configure the Application (SP Connection \\ OAuth client) on the `Extended Properties` tab with the following values:\n\n* Basic\n* Kerberos\n* Passwordless\n\nPF Admin API treats all the Policies as belonging to `default` and there's no way to add new Policy Trees directly.\n\nSince we've pre-built all the Adapters \\ Policy Contracts - this uses a single call to pre-built the Policies as well\n\nPolicy Contract is fulfilled with specific data from AD to enable connections to:\n* PingOne for Enterprise\n* Office365\n",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a702892d-b8ae-412d-ac69-12d3f2362794",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "35a6dd7c-7d9d-4a5a-bf8a-0e60ffcc445a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "AS Config - Replace OIDC Policy",
              "item": [
                {
                  "name": "Replace OIDC Policy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4aa206d6-cc0b-49c2-83a2-ddfdd4de1b6b",
                        "exec": [
                          "pm.test(\"OIDC Policy Replaced\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "87d0e98c-b1a5-405a-80a3-3af7b888ea24",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "pingdfederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"OIDCPolicyDefault\",\n    \"name\": \"Default OIDC Policy\",\n    \"idTokenLifetime\": 5,\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"sub\"\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"address\"\n            },\n            {\n                \"name\": \"phone_number\"\n            },\n            {\n                \"name\": \"email\"\n            }\n        ]\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [\n            {\n                \"type\": \"LDAP\",\n                \"dataStoreRef\": {\n                    \"id\": \"LDAP-ActiveDirectory\"\n                },\n                \"id\": \"AD\",\n                \"description\": \"AD\",\n                \"baseDn\": \"{{adBaseDN}}\",\n                \"searchScope\": \"SUBTREE\",\n                \"searchFilter\": \"userPrincipalName=${sub}\",\n                \"binaryAttributeSettings\": {},\n                \"memberOfNestedGroup\": false\n            }\n        ],\n        \"attributeContractFulfillment\": {\n            \"sub\": {\n                \"source\": {\n                    \"type\": \"TOKEN\"\n                },\n                \"value\": \"sub\"\n            },\n            \"address\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"AD\"\n                },\n                \"value\": \"postalAddress\"\n            },\n            \"phone_number\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"AD\"\n                },\n                \"value\": \"telephoneNumber\"\n            },\n            \"email\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"AD\"\n                },\n                \"value\": \"mail\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    },\n    \"includeSriInIdToken\": false,\n    \"includeUserInfoInIdToken\": false,\n    \"includeSHashInIdToken\": false,\n    \"returnIdTokenOnRefreshGrant\": false,\n    \"accessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"scopeAttributeMappings\": {}\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/openIdConnect/policies/OIDCPolicyDefault",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dkd1564002996125.html"
                  },
                  "response": []
                }
              ],
              "_postman_id": "fcf8ff58-d270-4472-8e77-a37324a8a1c2",
              "description": "Replaces the PD lookup in the OIDC Policy.",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a364a501-08d5-4daa-902b-78756b9f2e54",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "518f6273-32fd-4513-b941-29022b88fa51",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "f89c9b55-f24c-4849-8261-38a6ab48af66",
          "description": "This set of calls can be used to fully configure a new PF server\n\nThe following components will be created:  \n\nDatastore:\n* AD PCV\n\nIdP Adapters:\n* HTML Form\n* Kerberos\n* PingID\n* ID-First\n\nIdP AuthN Policy Contract\n\nIdP Authentication Policy:\n* Extended Properties Selector\n * Basic:  HTML Form --> PingID --> Policy Contract\n * Kerberos:  Kerberos --> HTML Form --> Policy Contract\n * Passwordless: ID-First --> PingID\n\nIDP Sessions:\n* Global Sessions: **Enabled**\n* Overrides: PingID Adapter\n\nToken Mapping:\n* AuthN Policy Contract\n\nToken Manager:\n* Default JWT (Certificate)\n\nToken Mapping:\n* AuthN Policy Contract --> Default JWT\n\nVirtual Host:\n* `pingfederate`",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "0c4b05a3-3dfe-4295-ab65-f55c3865a543",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4fa48226-005d-4976-8b39-27ad1faecb14",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "76e5e904-bd13-431f-a720-e88a8c9a8500",
      "description": "This collection is used to configure the Workforce solution bundle with ActiveDirectory\n\nIncludes:\n* ActiveDirectory Data store\n* LDAP PCV (AD)\n* Adapters\n * HTML Form\n * PingID\n * Kerberos\n * ID-First\n* AuthN Policy\n * Basic (HTML Form + PID)\n * Kerberos (Kerberos + PID)\n * Passwordless (ID-First + PID)",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7866eec4-5ce7-4490-a6db-57a9502a4b39",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "35503348-783e-4d3f-9697-58901ee95efb",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Add PingCentral",
      "item": [
        {
          "name": "PingDir Config",
          "item": [
            {
              "name": "Add PingCentral Users \\ Roles",
              "item": [
                {
                  "name": "Get BaseDN from PD",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                        "exec": [
                          "pm.test(\"BaseDN retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    var response = pm.response.json();",
                          "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "573e360d-802e-4b52-a991-e4f74cc1779f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "auth": {
                      "type": "basic",
                      "basic": {
                        "password": "{{pdAdminPwd}}",
                        "username": "{{pdAdmin}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1",
                    "description": "Gets the `userbaseDN` that was used to create the PD instance"
                  },
                  "response": []
                },
                {
                  "name": "Modify Administrator",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "3f30196b-26de-4a99-a521-35a5cf4366ad",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"employeeType\": [ \"IAM-Admin\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/uid=administrator,ou=People,{{userBaseDN}}",
                    "description": "Add PingCentral Admin to PF Admin account"
                  },
                  "response": []
                },
                {
                  "name": "Create AppOwner.0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fac09f30-0b3e-46d7-a207-d96746611e69",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=appowner.0,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"appowner.0\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"appowner.0\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=appowner.0\" ],\n\t\"employeeType\":[ \"Application-Owner\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                },
                {
                  "name": "Create AppOwner.1",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5a48fbe0-ba2a-497d-a517-eaec37819eee",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "    ",
                          "pm.test(\"User Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "    ",
                          "    pm.environment.set(\"count\", count++);",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "bd157803-4087-4488-8f49-d94138050309",
                        "exec": [
                          "var count = pm.environment.get(\"count\");",
                          "var userCount = pm.environment.get(\"count\");",
                          "",
                          "// if (!count){",
                          "//     count = 0;",
                          "//     pm.environment.set(\"count\", count);",
                          "// }"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "db11bc5f-b0b6-453a-9df0-d09a4d65cc01",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"uid=appowner.1,ou=People,{{userBaseDN}}\",\n\t\"objectClass\": [ \"inetOrgPerson\", \"pf-connected-identities\" ],\n\t\"sn\": [ \"{{$randomLastName}}\" ],\n\t\"cn\": [ \"appowner.1\" ],\n\t\"givenName\": [ \"{{$randomFirstName}}\" ],\n\t\"uid\": [ \"appowner.1\" ],\n\t\"userPassword\": [ \"{{globalPwd}}\" ],\n\t\"pf-connected-identity\":  [ \"auth-source=pf-local-identity:user-id=appowner.1\" ],\n\t\"employeeType\":[ \"Application-Owner\" ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/directory/v1/"
                  },
                  "response": []
                }
              ],
              "_postman_id": "04eb55e1-a968-4a61-95c9-1ca03dd1dd53",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "af0d081d-7030-4c44-91ff-9dab69f4287e",
          "description": "PingDir calls:\n\n* Add `IAM-Admin` to Administrator --> `employeeType`\n* Add `appowner.0` with `Application-Owner` in `employeeType`",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdAdminPwd}}",
              "username": "{{pdAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "862a9eb2-804f-49fc-8033-fe129ad1313c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "24e8ea9f-8b7a-4a96-9df0-4cbbdbe0776b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "PingFed Config",
          "item": [
            {
              "name": "Get current AS Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd235f96-6f1f-4407-a764-215c3716cda8",
                    "exec": [
                      "pm.test(\"OAuth AS retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    pm.environment.set(\"asSettings\", pm.response.json());",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "91ee65e1-8446-4bed-ae21-6754a05e242a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings"
              },
              "response": []
            },
            {
              "name": "Configure AS - CORS for PingCentral",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dd235f96-6f1f-4407-a764-215c3716cda8",
                    "exec": [
                      "pm.test(\"OAuth AS configured\", function () {",
                      "    pm.response.to.be.ok;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "5ed1069d-e529-4b9f-91eb-ad72790907b1",
                    "exec": [
                      "var asSettings = pm.environment.get(\"asSettings\");",
                      "var pingCentralHost = pm.environment.get(\"pingCentralHost\");",
                      "",
                      "//asSettings.allowedOrigins.push(\"http://\"+pingCentralHost);",
                      "asSettings.allowedOrigins.push(\"https://\"+pingCentralHost);",
                      "",
                      "pm.environment.set(\"asSettings\",JSON.stringify(asSettings));"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "5bde4bd9-f88f-4ae5-bfed-e47af510abb0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{asSettings}}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/authServerSettings",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ird1564002990806.html"
              },
              "response": []
            },
            {
              "name": "Create PingCentral OIDC Policy",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4aa206d6-cc0b-49c2-83a2-ddfdd4de1b6b",
                    "exec": [
                      "pm.test(\"OIDC Policy Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "c5e834c0-a8b3-45e0-8b14-e8514b0c2f9d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingdfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"PingCentralPolicyDefault\",\n    \"name\": \"PingCentral OIDC Policy\",\n    \"idTokenLifetime\": 5,\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"sub\"\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"PingCentral-Role\"\n            },\n            {\n                \"name\": \"email\"\n            },\n            {\n                \"name\": \"family_name\"\n            },\n            {\n                \"name\": \"given_name\"\n            }\n        ]\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [\n            {\n                \"type\": \"LDAP\",\n                \"dataStoreRef\": {\n                    \"id\": \"LDAP-PingDirectory\"\n                },\n                \"id\": \"PD\",\n                \"description\": \"PD\",\n                \"baseDn\": \"{{userBaseDN}}\",\n                \"searchScope\": \"SUBTREE\",\n                \"searchFilter\": \"uid=${sub}\",\n                \"binaryAttributeSettings\": {},\n                \"memberOfNestedGroup\": false\n            }\n        ],\n        \"attributeContractFulfillment\": {\n            \"sub\": {\n                \"source\": {\n                    \"type\": \"TOKEN\"\n                },\n                \"value\": \"sub\"\n            },\n            \"PingCentral-Role\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"employeeType\"\n            },\n            \"email\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"mail\"\n            },\n            \"given_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"givenName\"\n            },\n            \"family_name\": {\n                \"source\": {\n                    \"type\": \"LDAP_DATA_STORE\",\n                    \"id\": \"PD\"\n                },\n                \"value\": \"sn\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    },\n    \"includeSriInIdToken\": false,\n    \"includeUserInfoInIdToken\": false,\n    \"includeSHashInIdToken\": false,\n    \"returnIdTokenOnRefreshGrant\": false,\n    \"accessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"scopeAttributeMappings\": {}\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/openIdConnect/policies",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dkd1564002996125.html"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PingCentral)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "41847d1c-9c1e-4b88-b671-c997621406f0",
                    "exec": [
                      "pm.test(\"OIDC Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1e8a2854-06e0-4e10-b9c4-99ed58338a32",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"clientId\": \"PingCentral\",\n    \"enabled\": true,\n    \"redirectUris\": [\n        \"https://*/login/oauth2/code/pingcentral\"\n    ],\n    \"grantTypes\": [\n        \"AUTHORIZATION_CODE\"\n    ],\n    \"name\": \"PingCentral\",\n    \"description\": \"This client is used to Authenticate to PingCentral\",\n    \"logoUrl\": \"\",\n    \"refreshRolling\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationTime\": 0,\n    \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n    \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n    \"persistentGrantIdleTimeout\": 0,\n    \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n    \"bypassApprovalPage\": true,\n    \"restrictScopes\": false,\n    \"restrictedScopes\": [],\n    \"exclusiveScopes\": [],\n    \"restrictedResponseTypes\": [],\n    \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"validateUsingAllEligibleAtms\": false,\n    \"oidcPolicy\": {\n        \"policyGroup\": {\n            \"id\": \"PingCentralPolicyDefault\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n    },\n    \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{oauthSecret}}\",\n        \"enforceReplayPrevention\": false\n    },\n    \"extendedParameters\": {\n        \"authNexp\": {\n            \"values\": [\n                \"Basic\"\n            ]\n        }\n    },\n    \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n    \"requireProofKeyForCodeExchange\": false,\n    \"requireSignedRequests\": false\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to issue tokens for several Ping Products (using Exclusive Scopes):\n\n* PingCentral"
              },
              "response": []
            }
          ],
          "_postman_id": "e4debe29-f0f9-41eb-8576-7647831c34cf",
          "description": "PingFed calls to enable PingCentral\n\n* Add OAuth AS CORS for PingCentral\n* Creates new OIDC Policy for UserInfo results used by PingCentral\n* Add `PingCentral` OIDC client (AuthZ Code)",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pfAdminPwd}}",
              "username": "{{pfAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ddf5c0f3-d003-4399-8f1b-fb28013652b1",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "66b0b3f0-dac2-4df1-987f-2409330695a6",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "a8e215eb-594b-48e1-909a-2ccd12cc4c78",
      "description": "Calls to configure PingCentral:\n\n\n**PingDir**\n* Uses `employeeType` for PingCentral Role\n* Modifies `Administrator` with `IAM-Admin` role\n* Adds `appowner.0` User - with `Application-Owner` role\n\n* **PingFed**\n* Add `PingCentral` OIDC Client\n* Add `PingCentralOIDCPolicy` OIDC Policy\n  * Retrieves `given_name` / `family_name` / `PingCentral-Role`\n",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "8a6868a0-c519-4980-8b74-815747507b1d",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "c05cae44-4582-459a-a13e-8721eface20a",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "PF - Add Sample Apps",
      "item": [
        {
          "name": "Create SP Connections",
          "item": [
            {
              "name": "Add SP Connection",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1dcbdc33-6fe7-4b12-a87c-333eb87390d6",
                    "exec": [
                      "pm.test(\"SAML SP Connection Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "cd036971-fdb6-4c3f-aef5-a16bed26f72b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "X-XSRF-Header",
                    "value": "pingfederate",
                    "type": "text"
                  },
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"id\": \"Dummy-SAML\",\n    \"type\": \"SP\",\n    \"name\": \"Dummy SAML (HTTPBIN)\",\n    \"entityId\": \"Dummy-SAML\",\n\t\"applicationName\": \"Dummy-SAML\",\n    \"active\": true,\n    \"contactInfo\": {},\n    \"loggingMode\": \"STANDARD\",\n    \"virtualEntityIds\": [],\n    \"licenseConnectionGroup\": \"\",\n    \"credentials\": {\n        \"certs\": [],\n        \"signingSettings\": {\n            \"signingKeyPairRef\": {\n                \"id\": \"signing-cert\"\n            },\n            \"includeCertInSignature\": false,\n            \"includeRawKeyInSignature\": false,\n            \"algorithm\": \"SHA256withRSA\"\n        }\n    },\n    \"extendedProperties\": {\n\t\t\"authNexp\": {\n    \t\t\"values\": [\n        \t\t\"Basic\"\n        ]\n      }\n    },\n    \"spBrowserSso\": {\n        \"protocol\": \"SAML20\",\n        \"enabledProfiles\": [\n            \"IDP_INITIATED_SSO\"\n        ],\n        \"ssoServiceEndpoints\": [\n            {\n                \"binding\": \"POST\",\n                \"url\": \"https://httpbin.org/anything\",\n                \"isDefault\": true,\n                \"index\": 0\n            }\n        ],\n        \"signAssertions\": false,\n        \"signResponseAsRequired\": true,\n        \"spSamlIdentityMapping\": \"STANDARD\",\n        \"requireSignedAuthnRequests\": false,\n        \"assertionLifetime\": {\n            \"minutesBefore\": 5,\n            \"minutesAfter\": 5\n        },\n        \"encryptionPolicy\": {\n            \"encryptAssertion\": false,\n            \"encryptSloSubjectNameId\": false,\n            \"sloSubjectNameIDEncrypted\": false,\n            \"encryptedAttributes\": []\n        },\n        \"attributeContract\": {\n            \"coreAttributes\": [\n                {\n                    \"name\": \"SAML_SUBJECT\",\n                    \"nameFormat\": \"urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified\"\n                }\n            ],\n            \"extendedAttributes\": []\n        },\n        \"adapterMappings\": [],\n        \"authenticationPolicyContractAssertionMappings\": [\n            {\n                \"attributeSources\": [],\n                \"attributeContractFulfillment\": {\n                    \"SAML_SUBJECT\": {\n                        \"source\": {\n                            \"type\": \"AUTHENTICATION_POLICY_CONTRACT\"\n                        },\n                        \"value\": \"subject\"\n                    }\n                },\n                \"issuanceCriteria\": {\n                    \"conditionalCriteria\": []\n                },\n                \"authenticationPolicyContractRef\": {\n                    \"id\": \"defaultPolicyContract\"\n                },\n                \"restrictVirtualEntityIds\": false,\n                \"restrictedVirtualEntityIds\": [],\n                \"abortSsoTransactionAsFailSafe\": false\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/spConnections",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=ikr1564002999528.html\n\nDummy SP Connection -- sends you to https://httpbin.org/anything"
              },
              "response": []
            }
          ],
          "_postman_id": "31b67089-1c87-458d-a41a-cdf1adb7859d",
          "description": "Create SP Connection that does an Authentication --> SAML Assertion to https://httpsbin.org/anything ",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "83848c83-bab4-4950-9ffa-5fb9f3a5892c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "eeac56a3-1078-45c3-88c5-aa2878bd6910",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Create OIDC Clients",
          "item": [
            {
              "name": "Create OIDC Client (PingLogon)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "41847d1c-9c1e-4b88-b671-c997621406f0",
                    "exec": [
                      "pm.test(\"OIDC Client - PingLogon Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "a24ffc49-9e76-41d5-b648-f5fa2d77ea40",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n      \"clientId\": \"PingLogon\",\n      \"enabled\": true,\n      \"redirectUris\": [\n        \"https://httpbin.org/anything\"\n      ],\n      \"grantTypes\": [\n        \"IMPLICIT\",\n        \"AUTHORIZATION_CODE\"\n      ],\n      \"name\": \"Ping Logon\",\n      \"description\": \"This client is used to perform OIDC logons\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": true,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [\n      ],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n      },\n      \"validateUsingAllEligibleAtms\": false,\n      \"oidcPolicy\": {\n        \"policyGroup\": {\n          \"id\": \"OIDCPolicyDefault\"\n        },\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{oauthSecret}}\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {\n    \t\"authNexp\": {\n        \t\"values\": [\n        \t\t\"Basic\"\n          ]\n        }\n      },\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireProofKeyForCodeExchange\": false,\n      \"requireSignedRequests\": false\n    }",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to demonstrate OIDC User AuthN (Authz Code \\ Implicit) flows"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PingIntrospect)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "357f9987-ab1f-4e11-aea5-059c0dc4de65",
                    "exec": [
                      "pm.test(\"OIDC Client - PingIntrospect Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "d64fa2f0-4cdc-4b66-b4c2-1122952233e0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n      \"clientId\": \"PingIntrospect\",\n      \"enabled\": true,\n      \"redirectUris\": [],\n      \"grantTypes\": [\n        \"ACCESS_TOKEN_VALIDATION\"\n      ],\n      \"name\": \"Ping Introspect\",\n      \"description\": \"This client is used to Introspect and validate PF-issued access_tokens\",\n      \"logoUrl\": \"\",\n      \"refreshRolling\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n      \"persistentGrantExpirationTime\": 0,\n      \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n      \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n      \"persistentGrantIdleTimeout\": 0,\n      \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n      \"bypassApprovalPage\": false,\n      \"restrictScopes\": false,\n      \"restrictedScopes\": [],\n      \"exclusiveScopes\": [],\n      \"restrictedResponseTypes\": [],\n      \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n      },\n      \"validateUsingAllEligibleAtms\": true,\n      \"oidcPolicy\": {\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false\n      },\n      \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{oauthSecret}}\",\n        \"enforceReplayPrevention\": false\n      },\n      \"extendedParameters\": {},\n      \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n      \"requireSignedRequests\": false\n    }",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to Introspect `access_token`"
              },
              "response": []
            },
            {
              "name": "Create OIDC Client (PingServices)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cf573bc-8633-4f76-85e8-7139c9c68aec",
                    "exec": [
                      "pm.test(\"OAuth Client Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "1a5ff51e-74d0-403b-8cf8-6be79bcf2090",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  },
                  {
                    "key": "X-XSRF-Header",
                    "type": "text",
                    "value": "pingfederate"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"clientId\": \"PingServices\",\n    \"enabled\": true,\n    \"redirectUris\": [],\n    \"grantTypes\": [\n        \"CLIENT_CREDENTIALS\"\n    ],\n    \"name\": \"Ping Services\",\n    \"description\": \"This client is used by Services to ask for API Tokens (Client_Credentials)\",\n    \"refreshRolling\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationType\": \"SERVER_DEFAULT\",\n    \"persistentGrantExpirationTime\": 0,\n    \"persistentGrantExpirationTimeUnit\": \"DAYS\",\n    \"persistentGrantIdleTimeoutType\": \"SERVER_DEFAULT\",\n    \"persistentGrantIdleTimeout\": 0,\n    \"persistentGrantIdleTimeoutTimeUnit\": \"DAYS\",\n    \"bypassApprovalPage\": true,\n    \"restrictScopes\": false,\n    \"restrictedScopes\": [],\n    \"exclusiveScopes\": [],\n    \"restrictedResponseTypes\": [],\n    \"defaultAccessTokenManagerRef\": {\n        \"id\": \"jwtDefault\"\n    },\n    \"validateUsingAllEligibleAtms\": false,\n    \"oidcPolicy\": {\n        \"grantAccessSessionRevocationApi\": false,\n        \"pingAccessLogoutCapable\": false,\n        \"pairwiseIdentifierUserType\": false\n    },\n    \"clientAuth\": {\n        \"type\": \"SECRET\",\n        \"secret\": \"{{oauthSecret}}\",\n        \"enforceReplayPrevention\": false\n    },\n    \"extendedParameters\": {\n        \"authNexp\": {}\n    },\n    \"deviceFlowSettingType\": \"SERVER_DEFAULT\",\n    \"requireProofKeyForCodeExchange\": false,\n    \"requireSignedRequests\": false\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{pfAdminURL}}/pf-admin-api/v1/oauth/clients",
                "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=roj1564002966901.html\n\nThis client can be used to issue `client_credential` Service tokens"
              },
              "response": []
            }
          ],
          "_postman_id": "a1eccec4-e156-4891-ae45-c69a3eb0d601",
          "description": "Create 2 OIDC Clients\n\n* PingLogon\n * AuthZ Code \\ Implicit\n* PingIntrospect\n * Introspection client",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "1e8c4e55-382d-471c-aef0-acf32c8cab30",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bfb74f10-a329-4acc-9046-17a16a77eaa3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Test Use Cases",
          "item": [
            {
              "name": "Test SAML Connection (Basic)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d23267c-44f2-45ac-9e86-c538560e2537",
                    "exec": [
                      "const $ = cheerio.load(responseBody);",
                      "    ",
                      "pm.test(\"SAML Assertion created: \\n\", function () {",
                      "    pm.expect($(\"input[name='SAMLResponse']\").val()).to.not.be.empty; ",
                      "    console.log(\"SAML Assertion was created\", atob($(\"input[name='SAMLResponse']\").val()));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "319d7e85-0743-462e-9685-ee210c7b5f74",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/x-www-form-urlencoded",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "pf.username",
                      "value": "user.0",
                      "type": "text"
                    },
                    {
                      "key": "pf.pass",
                      "value": "2FederateM0re",
                      "type": "text"
                    }
                  ],
                  "options": {
                    "urlencoded": {}
                  }
                },
                "url": {
                  "raw": "{{pfBaseURL}}/idp/startSSO.ping?PartnerSpId=Dummy-SAML",
                  "host": [
                    "{{pfBaseURL}}"
                  ],
                  "path": [
                    "idp",
                    "startSSO.ping"
                  ],
                  "query": [
                    {
                      "key": "PartnerSpId",
                      "value": "Dummy-SAML"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Test OIDC Token request",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc6b5143-869c-4bb1-b81e-e5d4a03511ea",
                    "exec": [
                      "pm.test(\"OIDC AuthZ Code returned\", function () {",
                      "    pm.response.to.have.status(302);",
                      "        var loc = pm.response.headers.get(\"location\").split(\"=\");",
                      "        var authzCode = loc[1];",
                      "",
                      "        // Parse out the Code value",
                      "        pm.environment.set(\"authzCode\", authzCode);",
                      "        console.log(\"AuthZ Code:\", authzCode);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "8a774fbb-21a9-4503-b59a-feed66095dbc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/x-www-form-urlencoded",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "pf.username",
                      "value": "user.0",
                      "type": "text"
                    },
                    {
                      "key": "pf.pass",
                      "value": "2FederateM0re",
                      "type": "text"
                    }
                  ],
                  "options": {
                    "urlencoded": {}
                  }
                },
                "url": {
                  "raw": "{{pfBaseURL}}/as/authorization.oauth2?response_type=code&client_id=PingLogon&redirect_uri=https://httpbin.org/anything&scope=openid profile",
                  "host": [
                    "{{pfBaseURL}}"
                  ],
                  "path": [
                    "as",
                    "authorization.oauth2"
                  ],
                  "query": [
                    {
                      "key": "response_type",
                      "value": "code"
                    },
                    {
                      "key": "client_id",
                      "value": "PingLogon"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://httpbin.org/anything"
                    },
                    {
                      "key": "scope",
                      "value": "openid profile"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Swap Code for Tokens",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dbee2997-28a8-42e5-ab46-915d74cada50",
                    "exec": [
                      "function parseJwt (token) {",
                      "            var base64Url = token.split('.')[1];",
                      "            var base64 = base64Url.replace('-', '+').replace('_', '/');",
                      "            return JSON.parse(atob(base64));",
                      "        }",
                      "",
                      "",
                      "pm.test(\"Tokens returned\", function () {",
                      "    ",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.access_token).to.not.be.empty;",
                      "    console.log(\"Access Token: \", parseJwt(jsonData.access_token));",
                      "    ",
                      "    console.log(\"--------------\");",
                      "    ",
                      "    pm.expect(jsonData.id_token).to.not.be.empty;",
                      "    pm.environment.set(\"id_token\", jsonData.id_token );",
                      "    console.log(\"ID Token: \", parseJwt(jsonData.id_token));",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "959ed632-9194-4b93-93fc-8bfce9cf5fbc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "basic",
                  "basic": {
                    "password": "{{oauthSecret}}",
                    "username": "PingLogon"
                  }
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{pfBaseURL}}/as/token.oauth2?grant_type=authorization_code&redirect_uri=https://httpbin.org/anything&code={{authzCode}}",
                  "host": [
                    "{{pfBaseURL}}"
                  ],
                  "path": [
                    "as",
                    "token.oauth2"
                  ],
                  "query": [
                    {
                      "key": "grant_type",
                      "value": "authorization_code"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://httpbin.org/anything"
                    },
                    {
                      "key": "code",
                      "value": "{{authzCode}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_id": "82ba345c-3bf5-449c-a03a-4e2c6415025d",
          "description": "Test to see if the connections are up:\n\n* SAML Connection -- base64 encoded Assertion will be checked\n* OIDC -- Performs a OIDC Code flow and Token Swap (requires `--ignore-redirects`)\n\nNote: Minted tokens can be seen in the console log",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "e359e545-c9a4-4d03-9b49-d3d5faac809b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5aca5b7e-abbc-4ec0-9713-40468b9cb6c0",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "9846afd3-20bf-4a3b-b335-ec8572d80341",
      "description": "Calls to generate a couple of sample applications:\n* SAML\n* OIDC",
      "auth": {
        "type": "basic",
        "basic": {
          "password": "{{pfAdminPwd}}",
          "username": "{{pfAdmin}}"
        }
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7f7652fe-8870-4d85-810e-fd52c7961f08",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "eb2921ab-9cf2-439f-a887-e9e2ba07e1f6",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Add PingDataSync",
      "item": [
        {
          "name": "PingDir",
          "item": [
            {
              "name": "Get BaseDN from PD",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b84ada5d-f877-48d8-b818-e8b18dcb4155",
                    "exec": [
                      "pm.test(\"BaseDN retrieved\", function () {",
                      "    pm.response.to.be.ok;",
                      "    ",
                      "    var response = pm.response.json();",
                      "    pm.environment.set(\"userBaseDN\", response.publicBaseDNs[0])",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "dfe4122f-2a53-47a5-9faf-495ddc8bae1a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1"
              },
              "response": []
            },
            {
              "name": "Create ActiveDirectory OU",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f51e0e02-f1a9-4a2c-861c-e12319ae9538",
                    "exec": [
                      "pm.test(\"ou=People Created\", function () {",
                      "    pm.response.to.have.status(\"Created\");",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "_postman_id": "90aee4ab-fdc5-4bc9-8b46-d20d5a667911",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"_dn\": \"ou=ActiveDirectory,{{userBaseDN}}\",\n\t\"objectClass\": [ \"organizationalUnit\" ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{pdAdminUrl}}/directory/v1"
              },
              "response": []
            }
          ],
          "_postman_id": "b811c935-afd3-4a02-aca4-270a10eea50f",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdAdminPwd}}",
              "username": "{{pdAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f09dd96c-9642-43ce-805f-91879f6d2c82",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a27fe3ad-6457-40d5-a622-9f592d4f2b7a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "PingDataSync",
          "item": [
            {
              "name": "Enable Blind Trust",
              "item": [
                {
                  "name": "Enable Blind Trust",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1fae8dd8-a9a2-417a-ad39-50ba3948371d",
                        "exec": [
                          "pm.test(\"Trust Enabled\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b3ffab5f-f014-4a6f-a01c-ad8d3b9fdbe4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"enabled\" : \"true\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/trust-manager-providers/Blind Trust"
                  },
                  "response": []
                }
              ],
              "_postman_id": "c95cab1e-d680-4991-a1d7-d5edb1eda3ea",
              "_postman_isSubFolder": true
            },
            {
              "name": "Create External Servers",
              "item": [
                {
                  "name": "Add AD as an External Server",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1fae8dd8-a9a2-417a-ad39-50ba3948371d",
                        "exec": [
                          "pm.test(\"Server Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "e257be5e-4214-462b-81fe-fba17739741f",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:external-server:active-directory\"\n    ],\n    \"serverHostName\": \"{{adDcHost}}\",\n    \"serverPort\": \"636\",\n    \"bindDN\": \"{{adServiceAccountDN}}\",\n    \"password\": \"{{adServicePwd}}\",\n    \"connectionSecurity\": \"ssl\",\n    \"keyManagerProvider\": \"Null\",\n    \"trustManagerProvider\": \"Blind Trust\",\n    \"initialConnections\": \"1\",\n    \"maxConnections\": \"4\",\n    \"serverName\": \"activedirectory\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/external-servers"
                  },
                  "response": []
                },
                {
                  "name": "Add PD as an External Server",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5518f6cc-46c9-42fd-b726-122767f11d88",
                        "exec": [
                          "pm.test(\"Server Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1d1b68ec-8c26-4954-867a-0d80ea481e61",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds\"\n    ],\n    \"serverHostName\": \"pingdirectory\",\n    \"serverPort\": \"636\",\n    \"bindDN\": \"cn=sync\",\n    \"password\": \"{{globalPwd}}\",\n    \"connectionSecurity\": \"ssl\",\n    \"keyManagerProvider\": \"Null\",\n    \"trustManagerProvider\": \"Blind Trust\",\n    \"initialConnections\": \"1\",\n    \"maxConnections\": \"4\",\n    \"serverName\": \"pingdirectory\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/external-servers"
                  },
                  "response": []
                }
              ],
              "_postman_id": "591e301a-218f-4c07-8dce-0acec74450a5",
              "description": "Creates the Endpoints for PDS to connect to:\n\n* ActiveDirectory (`adDcHost`) \n* PingDirectory",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b518b9ba-aa17-44b5-8ab3-dffb34936b1f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f0755995-4418-408b-9ca4-821884db6f30",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Sync Endpoints",
              "item": [
                {
                  "name": "Add AD as Sync Source",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "90d0bbf3-92ac-448a-94f0-f19cc65c355d",
                        "exec": [
                          "pm.test(\"Sync Source Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "6734ab8f-9b43-4b15-88e4-78553df88ad9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:sync-source:active-directory\"\n    ],\n    \"baseDN\": \"{{adBaseDN}}\",\n    \"server\": \"activedirectory\",\n    \"sourceName\": \"AD_Source\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-sources"
                  },
                  "response": []
                },
                {
                  "name": "Add PD as Sync Destination",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                        "exec": [
                          "pm.test(\"Sync Destination Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "38fb2cff-65b1-440e-ac5d-58b49727f6b8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:sync-destination:ping-identity\"\n    ],\n    \"baseDN\": \"{{userBaseDN}}\",\n    \"requireSecureConnectionForClearTextPasswords\": \"true\",\n    \"server\": \"pingdirectory\",\n    \"destinationName\": \"PD_Destination\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-destinations"
                  },
                  "response": []
                }
              ],
              "_postman_id": "bece2083-00ed-4f5d-9060-9b22d463ee8a",
              "description": "Creates the Sync endpoints:\n\n* Source -- ActiveDirectory (`adBaseDN`)\n* Destination -- PingDirectory (`userBaseDN`)",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "842f6523-31e7-4f28-b49b-ad24856736cc",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a8c10e3d-494a-4ed7-a927-cda5c0bd7e0a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Sync Mappings",
              "item": [
                {
                  "name": "AD Users",
                  "item": [
                    {
                      "name": "Create Attribute Map",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "4f1001a2-51e5-4b50-9020-18d03e578e0c",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-map\" ],\n  \"mapName\" : \"ADUsers-to-PD-Map\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - objectClass",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "6a0a3ae5-052f-4f20-a22d-ef6cbf3cdf1a",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:constructed\" ],\n  \"valuePattern\" : \"inetOrgPerson\",\n  \"mappingName\" : \"objectClass\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - cn",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "6f2cf966-c2e0-4176-a72f-60b9dd9c8f8f",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"cn\",\n  \"mappingName\" : \"cn\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - givenName",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "d2da549c-486b-4a26-974b-3d5003953ab5",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"givenName\",\n  \"mappingName\" : \"givenName\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - sn",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "5ef8dab7-c0fc-4762-9c35-e2cb91b41357",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"sn\",\n  \"mappingName\" : \"sn\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - DisplayName",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "ba491020-e98a-4aec-96fc-fd24e46e6e34",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"displayName\",\n  \"mappingName\" : \"displayName\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - mail",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "b08b808b-0498-4665-9e8e-af2cc04dfa29",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"mail\",\n  \"mappingName\" : \"mail\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - unicodePwd",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "10b61bdf-d55a-403d-93a7-8688f75981ee",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "7f961265-44eb-4eea-bea2-70337477d406",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"unicodePwd\",\n  \"mappingName\" : \"userPassword\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADUsers-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Add DN Map",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ccef3575-0e4a-42d6-8786-24ebb4105767",
                            "exec": [
                              "pm.test(\"DN Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "4e84bd27-765f-44ea-a35e-85a143003b53",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:dn-map\"\n    ],\n    \"fromDNPattern\": \"**\",\n    \"toDNPattern\": \"uid={sAMAccountName},ou=activedirectory,{{userBaseDN}}\",\n    \"mapName\": \"SourceUsers_to_Destination\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/dn-maps"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "19a09f99-6559-4fe6-91b0-613a82d21023",
                  "_postman_isSubFolder": true
                },
                {
                  "name": "AD Groups",
                  "item": [
                    {
                      "name": "Create Attribute Map",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a7377600-e7b1-4167-9ffe-eeeb5721889c",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "5accf87b-1dc2-4067-924e-e1accd0b5f82",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-map\" ],\n  \"mapName\" : \"ADGroups-to-PD-Map\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - objectClass",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "61cd8b7c-fc66-4fec-81d6-7be9f241875a",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "6656b90f-90d8-4afd-a826-e46e8ed87bd3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:constructed\" ],\n  \"valuePattern\" : \"groupOfNames\",\n  \"mappingName\" : \"objectClass\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADGroups-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - cn",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "5f7cbe92-e1f6-443b-a41c-9cf482f55efd",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "55733f30-2b75-46ea-8366-e53eca5495f3",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"cn\",\n  \"mappingName\" : \"cn\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADGroups-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Create Attribute Mapping - member",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8c3038b8-54cd-4f15-81ab-68f2244bfeef",
                            "exec": [
                              "pm.test(\"Attribute Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "44c9e72c-ca97-42da-aa08-b21de4e888e6",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"schemas\" : [ \"urn:pingidentity:schemas:configuration:2.0:attribute-mapping:direct\" ],\n  \"fromAttribute\" : \"member\",\n  \"mappingName\" : \"member\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/attribute-maps/ADGroups-to-PD-Map/attribute-mappings"
                      },
                      "response": []
                    },
                    {
                      "name": "Add DN Map",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "08913914-4045-481f-ab23-339a30ebda0b",
                            "exec": [
                              "pm.test(\"DN Map Created\", function () {",
                              "    pm.response.to.have.status(\"Created\");",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "_postman_id": "62fbac3c-c4e4-42c1-b867-75907bddf904",
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      },
                      "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:dn-map\"\n    ],\n    \"fromDNPattern\": \"**\",\n    \"toDNPattern\": \"cn={cn},ou=activedirectory,{{userBaseDN}}\",\n    \"mapName\": \"SourceGroups_to_Destination\"\n}",
                          "options": {
                            "raw": {
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{pdsAdminURL}}/config/dn-maps"
                      },
                      "response": []
                    }
                  ],
                  "_postman_id": "5107f929-c248-4478-8827-358b00c58f1e",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_id": "76ddcf83-1052-4169-b14b-9fbe8570165d",
              "description": "Create Sync Mappings -- AD and PD do not use the same schema:\n\n* AD `objectClass` is mapped to just PD `inetOrgPerson`\n\n* DN Mapping to create PD User with `uid={sAMAccountName}`",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "09dbcb22-69b8-4028-821d-e56b953a0607",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bd73db14-6a8d-4251-876f-8c585e3f170a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Create Sync Pipe",
              "item": [
                {
                  "name": "Add AD-to-PD Sync Pipe",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "33103bb2-90c4-4fdd-bfee-24a0ea1568a9",
                        "exec": [
                          "pm.test(\"Sync Pipe Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "1335ddb0-e704-4c55-84af-60044551a21d",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:sync-pipe\"\n    ],\n    \"started\": \"true\",\n    \"syncSource\": \"AD_Source\",\n    \"syncDestination\": \"PD_Destination\",\n    \"changeDetectionPollingInterval\": \"1 s\",\n    \"numWorkerThreads\": \"1\",\n    \"pipeName\": \"AD_Source-to-PD_Destination\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-pipes"
                  },
                  "response": []
                },
                {
                  "name": "Add Sync Class - Users",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0ce89fea-f99f-49cf-98ab-50e4cc6da690",
                        "exec": [
                          "pm.test(\"Sync Class Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "11d61225-0a50-4a86-ad6b-b171c9bfce17",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:sync-class\"\n    ],\n    \"includeBaseDN\": \"{{adUserContainer}},{{adBaseDN}}\",\n    \"dnMap\": \"SourceUsers_to_Destination\",\n      \"attributeMap\" : \"ADUsers-to-PD-Map\",\n    \"autoMappedSourceAttribute\": \"-none-\",\n    \"ignoreZeroLengthValues\": \"true\",\n    \"evaluationOrderIndex\": 1000,\n    \"modifiesAsCreates\": \"true\",\n    \"createsAsModifies\": \"true\",\n    \"className\": \"ActiveDirectoryUsers\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-pipes/AD_Source-to-PD_Destination/sync-classes"
                  },
                  "response": []
                },
                {
                  "name": "Add Sync Class - Groups",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4666c62d-fab1-42bd-88b3-3b48196315f5",
                        "exec": [
                          "pm.test(\"Sync Class Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a056c7a0-2c54-4694-abf7-49230e1a6eaa",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:sync-class\"\n    ],\n    \"includeBaseDN\": \"{{adGroupContainer}},{{adBaseDN}}\",\n    \"dnMap\": \"SourceGroups_to_Destination\",\n      \"attributeMap\" : \"ADGroups-to-PD-Map\",\n    \"autoMappedSourceAttribute\": \"-none-\",\n    \"evaluationOrderIndex\": 1001,\n    \"ignoreZeroLengthValues\": \"true\",\n    \"modifiesAsCreates\": \"true\",\n    \"createsAsModifies\": \"true\",\n    \"className\": \"ActiveDirectoryGroups\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-pipes/AD_Source-to-PD_Destination/sync-classes"
                  },
                  "response": []
                }
              ],
              "_postman_id": "b041c715-936c-4271-9020-efda2e551bdb",
              "description": "Adds the Sync Pipe and associated Sync Class",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "842f6523-31e7-4f28-b49b-ad24856736cc",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "a8c10e3d-494a-4ed7-a927-cda5c0bd7e0a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Add Logging",
              "item": [
                {
                  "name": "Modify Logging Publisher",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7b7cdc05-694b-4387-b806-c64d2f91cac6",
                        "exec": [
                          "pm.test(\"Logging Modified\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "d3c88b7a-5e04-4abb-b7e0-368c1a8d8b05",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"includeSyncPipe\" : \"AD_Source-to-PD_Destination\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/log-publishers/File-Based Sync Logger"
                  },
                  "response": []
                },
                {
                  "name": "Modify Debug Logging",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7b7cdc05-694b-4387-b806-c64d2f91cac6",
                        "exec": [
                          "pm.test(\"Logging Modified\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "7a843c42-7cdc-4461-ad4c-b02a5efe33db",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"includeSyncPipe\" : \"AD_Source-to-PD_Destination\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/log-publishers/File-Based Sync Logger"
                  },
                  "response": []
                }
              ],
              "_postman_id": "449659c9-ac98-4b51-a31d-d358f1c88140",
              "description": "Enables the `sync` log for the Sync Pipe",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b400a65e-5bf4-4532-948d-23e5eb23ca83",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "91b0c5b4-d280-4512-9ca4-2ee79692da8a",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Start Sync Pipe",
              "item": [
                {
                  "name": "Stop Sync Pipe",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0ce89fea-f99f-49cf-98ab-50e4cc6da690",
                        "exec": [
                          "pm.test(\"Sync Pipe stopped\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c68f07db-d88d-4d83-bfa5-5fc069221b2c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:ietf:params:scim:api:messages:2.0:PatchOp\" ],\n  \"Operations\" : [ {\n    \"op\" : \"replace\",\n    \"path\" : \"started\",\n    \"value\" : \"false\"\n  } ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-pipes/AD_Source-to-PD_Destination"
                  },
                  "response": []
                },
                {
                  "name": "Create Scheduled Task - Set Startpoint",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c6a4d4b8-246b-435f-bd51-92de7245bf04",
                        "exec": [
                          "pm.test(\"Task Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "b99dd722-6e66-453d-bcd7-7e927a3b3084",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ds-task-id=SetStartPoint,cn=Scheduled Tasks,cn=Tasks\",\n    \"ds-task-class-name\": \"com.unboundid.directory.sync.tasks.SetStartpointTask\",\n    \"ds-task-sync-pipe-name\": \"AD_Source-to-PD_Destination\",\n    \"ds-task-tool-args\": \"set-startpoint --end-of-changelog --pipe-name AD_Source-to-PD_Destination\",\n    \"ds-task-tool-name\": \"realtime-sync\",\n    \"objectClass\": [\n        \"ds-task-set-startpoint\",\n        \"top\",\n        \"ds-task\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/directory/v1"
                  },
                  "response": []
                },
                {
                  "name": "Start Sync Pipe",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0ce89fea-f99f-49cf-98ab-50e4cc6da690",
                        "exec": [
                          "pm.test(\"Sync Pipe Started\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "fdb77b29-6eee-4a46-a37a-41fb1d7603e4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PATCH",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"schemas\" : [ \"urn:ietf:params:scim:api:messages:2.0:PatchOp\" ],\n  \"Operations\" : [ {\n    \"op\" : \"replace\",\n    \"path\" : \"started\",\n    \"value\" : \"true\"\n  } ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/config/sync-pipes/AD_Source-to-PD_Destination"
                  },
                  "response": []
                },
                {
                  "name": "Create Scheduled Task - Start Sync",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c6a4d4b8-246b-435f-bd51-92de7245bf04",
                        "exec": [
                          "pm.test(\"Task Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a2c832df-0b8b-44d0-b235-b81fa70eb00a",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"_dn\": \"ds-task-id=BeginADSync,cn=Scheduled Tasks,cn=Tasks\",\n    \"ds-task-class-name\": \"com.unboundid.directory.sync.tasks.SetStartpointTask\",\n    \"ds-task-sync-pipe-name\": \"AD_Source-to-PD_Destination\",\n    \"ds-task-tool-args\": \"start --pipe-name AD_Source-to-PD_Destination\",\n    \"ds-task-tool-name\": \"realtime-sync\",\n    \"objectClass\": [\n        \"ds-task-set-startpoint\",\n        \"top\",\n        \"ds-task\"\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdsAdminURL}}/directory/v1"
                  },
                  "response": []
                }
              ],
              "_postman_id": "a0d51bcd-9747-426f-98ab-10b8ef05cf9b",
              "description": "Creates a Task that triggers the process:\n\n`realtime-sync start --sync-pipe AD_Source-to-PD_Destination`",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "feb8de64-2ed9-4a2e-8f2f-03160961bafa",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ee9a47af-fffb-4e38-964a-6d0190efcf82",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "71d12625-e6f4-4d26-8cc5-416f3e74ee4e",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdsAdminPwd}}",
              "username": "{{pdsAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "579080cf-63a7-460d-9357-715baca446d5",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "0a020676-fdca-4d6e-a094-18092b8e5e66",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "4f53d44b-72c9-4021-b0a9-009f3af92832",
      "description": "Configures DataSync\n\n**PingDir**\n* Adds an OU for Synced Users from AD (`ou=activedirectory`)\n\n**DataSync**\n* Creates the AD Source \\ PD Destination\n* Creates Sync Pipe with Attribute Mapping\n* Creates Schedule Task to run `realtime-sync`",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0a2ff782-8bd8-4bec-8461-d93db7d965cd",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "31cacbc1-9004-4e65-8f12-4f44888c39e7",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Add PD to Workforce",
      "item": [
        {
          "name": "PingDir Config",
          "item": [
            {
              "name": "Add AD Pass Through AuthN",
              "item": [
                {
                  "name": "Create AD External Server",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "pm.test(\"AD Server Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "a7540b32-56a6-4193-8607-92fba178d707",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:external-server:active-directory\"\n    ],\n    \"serverHostName\": \"{{adDcHost}}\",\n    \"bindDN\": \"{{adServiceAccountDN}}\",\n    \"password\": \"{{adServicePwd}}\",\n    \"serverName\": \"Workforce AD\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/external-servers"
                  },
                  "response": []
                },
                {
                  "name": "Create AD PTA plugin",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2f22564-1713-4e6e-87bd-afea57c37b45",
                        "exec": [
                          "pm.test(\"Plug-in Created\", function () {",
                          "    pm.response.to.have.status(\"Created\");",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4c7dc6b5-74c9-4fbe-ba4f-24a4839bf489",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "4e6f4d1c-3387-416b-aa02-08f2f1df08c5",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"schemas\": [\n        \"urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication\"\n    ],\n    \"enabled\": \"true\",\n    \"server\": \"Workforce AD\",\n    \"searchBaseDN\": \"{{adBaseDN}}\",\n    \"searchFilterPattern\": \"(|(sAMAccountName={uid})(userPrincipalName={uid}))\",\n    \"updateLocalPassword\": true,\n    \"pluginName\": \"ActiveDirectory Pass Through Authentication Plugin\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pdAdminUrl}}/config/plugin-root/plugins"
                  },
                  "response": []
                }
              ],
              "_postman_id": "9bb2574c-d08c-4e86-860e-eed10d763ab4",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "c079786d-99a7-4d0d-948b-2a130290eccc",
          "auth": {
            "type": "basic",
            "basic": {
              "password": "{{pdAdminPwd}}",
              "username": "{{pdAdmin}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "862a9eb2-804f-49fc-8033-fe129ad1313c",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "24e8ea9f-8b7a-4a96-9df0-4cbbdbe0776b",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "PingFed Config",
          "item": [
            {
              "name": "Modify IdP Adapters",
              "item": [
                {
                  "name": "Modify Adapter - HTML Form (PD)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "4bf57839-9e86-49b8-be5f-773b0036b3cc",
                        "exec": [
                          "var pidBase64 = btoa(pm.environment.get('pingId'));",
                          "",
                          "pm.environment.set('encodedPingID', pidBase64);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "60fd1f88-442c-4348-a5f7-866296708a38",
                        "exec": [
                          "pm.test(\"HTML Form Adapter Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c9b52cc4-f439-43e6-bf8d-55262779ebc4",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"HTMLForm\",\n    \"name\": \"HTML Form\",\n    \"pluginDescriptorRef\": {\n        \"id\": \"com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter\"\n    },\n    \"configuration\": {\n        \"tables\": [\n            {\n                \"name\": \"Credential Validators\",\n                \"rows\": [\n                    {\n                        \"fields\": [\n                            {\n                                \"name\": \"Password Credential Validator Instance\",\n                                \"value\": \"PDPCV\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"fields\": [\n            {\n                \"name\": \"Challenge Retries\",\n                \"value\": \"3\"\n            },\n            {\n                \"name\": \"Session State\",\n                \"value\": \"None\"\n            },\n            {\n                \"name\": \"Session Timeout\",\n                \"value\": \"60\"\n            },\n            {\n                \"name\": \"Session Max Timeout\",\n                \"value\": \"480\"\n            },\n            {\n                \"name\": \"Allow Password Changes\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Password Management System\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable 'Remember My Username'\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Enable 'This is My Device'\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Change Password Email Notification\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Show Password Expiring Warning\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Password Reset Type\",\n                \"value\": \"PingID\"\n            },\n            {\n                \"name\": \"Account Unlock\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Local Identity Profile\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Enable Username Recovery\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Login Template\",\n                \"value\": \"html.form.login.template.html\"\n            },\n            {\n                \"name\": \"Logout Path\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Logout Redirect\",\n                \"value\": \"\"\n            },\n            {\n                \"name\": \"Logout Template\",\n                \"value\": \"idp.logout.success.page.template.html\"\n            },\n            {\n                \"name\": \"Change Password Template\",\n                \"value\": \"html.form.change.password.template.html\"\n            },\n            {\n                \"name\": \"Change Password Message Template\",\n                \"value\": \"html.form.message.template.html\"\n            },\n            {\n                \"name\": \"Password Management System Message Template\",\n                \"value\": \"html.form.message.template.html\"\n            },\n            {\n                \"name\": \"Change Password Email Template\",\n                \"value\": \"message-template-end-user-password-change.html\"\n            },\n            {\n                \"name\": \"Expiring Password Warning Template\",\n                \"value\": \"html.form.password.expiring.notification.template.html\"\n            },\n            {\n                \"name\": \"Threshold for Expiring Password Warning\",\n                \"value\": \"7\"\n            },\n            {\n                \"name\": \"Snooze Interval for Expiring Password Warning\",\n                \"value\": \"24\"\n            },\n            {\n                \"name\": \"Login Challenge Template\",\n                \"value\": \"html.form.login.challenge.template.html\"\n            },\n            {\n                \"name\": \"'Remember My Username' Lifetime\",\n                \"value\": \"30\"\n            },\n            {\n                \"name\": \"'This is My Device' Lifetime\",\n                \"value\": \"30\"\n            },\n            {\n                \"name\": \"Allow Username Edits During Chaining\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Track Authentication Time\",\n                \"value\": \"true\"\n            },\n            {\n                \"name\": \"Post-Password Change Re-Authentication Delay\",\n                \"value\": \"0\"\n            },\n            {\n                \"name\": \"Password Reset Username Template\",\n                \"value\": \"forgot-password.html\"\n            },\n            {\n                \"name\": \"Password Reset Code Template\",\n                \"value\": \"forgot-password-resume.html\"\n            },\n            {\n                \"name\": \"Password Reset Template\",\n                \"value\": \"forgot-password-change.html\"\n            },\n            {\n                \"name\": \"Password Reset Error Template\",\n                \"value\": \"forgot-password-error.html\"\n            },\n            {\n                \"name\": \"Password Reset Success Template\",\n                \"value\": \"forgot-password-success.html\"\n            },\n            {\n                \"name\": \"Account Unlock Template\",\n                \"value\": \"account-unlock.html\"\n            },\n            {\n                \"name\": \"OTP Length\",\n                \"value\": \"8\"\n            },\n            {\n                \"name\": \"OTP Time to Live\",\n                \"value\": \"10\"\n            },\n            {\n                \"name\": \"PingID Properties\",\n                \"value\": \"{{encodedPingID}}\"\n            },\n            {\n                \"name\": \"Require Verified Email\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"Username Recovery Template\",\n                \"value\": \"username.recovery.template.html\"\n            },\n            {\n                \"name\": \"Username Recovery Info Template\",\n                \"value\": \"username.recovery.info.template.html\"\n            },\n            {\n                \"name\": \"Username Recovery Email Template\",\n                \"value\": \"message-template-username-recovery.html\"\n            },\n            {\n                \"name\": \"CAPTCHA for Authentication\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Password change\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Password Reset\",\n                \"value\": \"false\"\n            },\n            {\n                \"name\": \"CAPTCHA for Username recovery\",\n                \"value\": \"false\"\n            }\n        ]\n    },\n    \"attributeContract\": {\n        \"coreAttributes\": [\n            {\n                \"name\": \"policy.action\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"username\",\n                \"masked\": false,\n                \"pseudonym\": true\n            }\n        ],\n        \"extendedAttributes\": [\n            {\n                \"name\": \"entryUUID\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"uid\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"memberOf\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"givenName\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"sn\",\n                \"masked\": false,\n                \"pseudonym\": false\n            },\n            {\n                \"name\": \"mail\",\n                \"masked\": false,\n                \"pseudonym\": false\n            }\n        ],\n        \"maskOgnlValues\": false\n    },\n    \"attributeMapping\": {\n        \"attributeSources\": [],\n        \"attributeContractFulfillment\": {\n            \"entryUUID\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"entryUUID\"\n            },\n            \"uid\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"uid\"\n            },\n            \"memberOf\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"memberOf\"\n            },\n            \"givenName\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"givenName\"\n            },\n            \"sn\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"sn\"\n            },\n            \"mail\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"mail\"\n            },\n            \"policy.action\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"policy.action\"\n            },\n            \"username\": {\n                \"source\": {\n                    \"type\": \"ADAPTER\"\n                },\n                \"value\": \"username\"\n            }\n        },\n        \"issuanceCriteria\": {\n            \"conditionalCriteria\": []\n        }\n    }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters/HTMLForm",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=dri1564003022949.html\n\nReplaces the AD PCV with the PD PCV"
                  },
                  "response": []
                },
                {
                  "name": "Modify Adapter - Identifier First (PD)",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "c20d7866-86ba-4609-be99-fa8ec082f6d7",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "40d0a80f-afef-4cad-9071-107b0499c1bd",
                        "exec": [
                          "pm.test(\"ID-First Adapter Created\", function () {",
                          "    pm.response.to.be.ok;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "0d407898-c90c-4146-8f6d-b86cd44a98a9",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                      },
                      {
                        "key": "X-XSRF-Header",
                        "type": "text",
                        "value": "PingFederate"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"id\": \"IDFirst\",\n  \"name\": \"ID-First\",\n  \"pluginDescriptorRef\": {\n    \"id\": \"com.pingidentity.adapters.identifierfirst.idp.IdentifierFirstAdapter\"\n  },\n  \"configuration\": {\n    \"tables\": [],\n    \"fields\": [\n      {\n        \"name\": \"Identifier Cookie Lifetime\",\n        \"value\": \"30\"\n      },\n      {\n        \"name\": \"Allow Cancelling Identifier Selection\",\n        \"value\": \"false\"\n      },\n      {\n        \"name\": \"Maximum Identifiers Count\",\n        \"value\": \"5\"\n      },\n      {\n        \"name\": \"Identifier Selection Template\",\n        \"value\": \"identifier.first.template.html\"\n      }\n    ]\n  },\n  \"attributeContract\": {\n    \"coreAttributes\": [\n      {\n        \"name\": \"subject\",\n        \"masked\": false,\n        \"pseudonym\": true\n      },\n      {\n        \"name\": \"domain\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"extendedAttributes\": [\n      {\n        \"name\": \"mail\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"givenName\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"entryUUID\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"memberOf\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"sn\",\n        \"masked\": false,\n        \"pseudonym\": false\n      },\n      {\n        \"name\": \"uid\",\n        \"masked\": false,\n        \"pseudonym\": false\n      }\n    ],\n    \"maskOgnlValues\": false\n  },\n  \"attributeMapping\": {\n    \"attributeSources\": [\n      {\n        \"type\": \"LDAP\",\n        \"dataStoreRef\": {\n          \"id\": \"LDAP-PingDirectory\"\n        },\n        \"id\": \"PD\",\n        \"description\": \"PD\",\n        \"baseDn\": \"{{userBaseDN}}\",\n        \"searchScope\": \"SUBTREE\",\n        \"searchFilter\": \"(|(uid=${subject})(mail=${subject}))\",\n        \"memberOfNestedGroup\": false\n      }\n    ],\n    \"attributeContractFulfillment\": {\n      \"mail\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"mail\"\n      },\n      \"subject\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"subject\"\n      },\n      \"domain\": {\n        \"source\": {\n          \"type\": \"ADAPTER\"\n        },\n        \"value\": \"domain\"\n      },\n      \"givenName\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"givenName\"\n      },\n      \"entryUUID\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"entryUUID\"\n      },\n      \"memberOf\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"isMemberOf\"\n      },\n      \"sn\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"sn\"\n      },\n      \"uid\": {\n        \"source\": {\n          \"type\": \"LDAP_DATA_STORE\",\n          \"id\": \"PD\"\n        },\n        \"value\": \"uid\"\n      }\n    },\n    \"issuanceCriteria\": {\n      \"conditionalCriteria\": []\n    }\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/idp/adapters/IDFirst",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=iek1564003022460.html\n\nReplaces the AD Lookup with a PD one"
                  },
                  "response": []
                }
              ],
              "_postman_id": "2c11e0c4-b719-44f4-868b-d6be3bc37d96",
              "description": "These calls modify the existing adapters:\n* HTML Form\n* ID-First\n\n* The PCV \\ Lookups are moved from AD to PD\n* Some attributes retrieved are different\n * `entryUUID`\n * `isMemberOf`",
              "_postman_isSubFolder": true
            },
            {
              "name": "Modify AuthN Policy",
              "item": [
                {
                  "name": "Modify AuthN Policies (PD)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "264fd93a-d2bd-4c86-b945-1c2fb4c22119",
                        "exec": [
                          "pm.test(\"AuthN Policies retrieved\", function () {",
                          "    pm.response.to.be.ok;",
                          "    ",
                          "    pm.environment.set(\"authnPolicy\", pm.response.json());",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "2245f3d8-94d8-4e1e-8d15-e5238853c8ac",
                        "exec": [
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "_postman_id": "c5cc1aef-2870-402a-9213-eb1bcccf1902",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "X-XSRF-Header",
                        "value": "pingfederate",
                        "type": "text"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/json",
                        "type": "text"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"failIfNoSelection\": false,\n  \"authnSelectionTrees\": [\n    {\n      \"rootNode\": {\n        \"action\": {\n          \"type\": \"AUTHN_SELECTOR\",\n          \"authenticationSelectorRef\": {\n            \"id\": \"authnExp\"\n          }\n        },\n        \"children\": [\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Basic\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"HTMLForm\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"AUTHN_SOURCE\",\n                  \"context\": \"Success\",\n                  \"authenticationSource\": {\n                    \"type\": \"IDP_ADAPTER\",\n                    \"sourceRef\": {\n                      \"id\": \"PingID\"\n                    }\n                  },\n                  \"inputUserIdMapping\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"HTMLForm\"\n                    },\n                    \"value\": \"mail\"\n                  }\n                },\n                \"children\": [\n                  {\n                    \"action\": {\n                      \"type\": \"DONE\",\n                      \"context\": \"Fail\"\n                    }\n                  },\n                  {\n                    \"action\": {\n                      \"type\": \"APC_MAPPING\",\n                      \"context\": \"Success\",\n                      \"authenticationPolicyContractRef\": {\n                        \"id\": \"defaultPolicyContract\"\n                      },\n                      \"attributeMapping\": {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                          \"ImmutableID\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"entryUUID\"\n                          },\n                          \"mail\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"mail\"\n                          },\n                          \"subject\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"username\"\n                          },\n                          \"givenName\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"givenName\"\n                          },\n                          \"memberOf\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"memberOf\"\n                          },\n                          \"sn\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"HTMLForm\"\n                            },\n                            \"value\": \"sn\"\n                          }\n                        },\n                        \"issuanceCriteria\": {\n                          \"conditionalCriteria\": []\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Kerberos\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"Kerberos\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"AUTHN_SOURCE\",\n                  \"context\": \"Success\",\n                  \"authenticationSource\": {\n                    \"type\": \"IDP_ADAPTER\",\n                    \"sourceRef\": {\n                      \"id\": \"PingID\"\n                    }\n                  },\n                  \"inputUserIdMapping\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"Kerberos\"\n                    },\n                    \"value\": \"userPrincipalName\"\n                  }\n                },\n                \"children\": [\n                  {\n                    \"action\": {\n                      \"type\": \"DONE\",\n                      \"context\": \"Fail\"\n                    }\n                  },\n                  {\n                    \"action\": {\n                      \"type\": \"APC_MAPPING\",\n                      \"context\": \"Success\",\n                      \"authenticationPolicyContractRef\": {\n                        \"id\": \"defaultPolicyContract\"\n                      },\n                      \"attributeMapping\": {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                          \"ImmutableID\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"mS-DS-ConsistencyGuid\"\n                          },\n                          \"mail\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"mail\"\n                          },\n                          \"subject\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"Username\"\n                          },\n                          \"givenName\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"givenName\"\n                          },\n                          \"memberOf\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"memberOf\"\n                          },\n                          \"sn\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"Kerberos\"\n                            },\n                            \"value\": \"sn\"\n                          }\n                        },\n                        \"issuanceCriteria\": {\n                          \"conditionalCriteria\": []\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Passwordless\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"IDFirst\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"AUTHN_SOURCE\",\n                  \"context\": \"Success\",\n                  \"authenticationSource\": {\n                    \"type\": \"IDP_ADAPTER\",\n                    \"sourceRef\": {\n                      \"id\": \"PingID\"\n                    }\n                  },\n                  \"inputUserIdMapping\": {\n                    \"source\": {\n                      \"type\": \"ADAPTER\",\n                      \"id\": \"IDFirst\"\n                    },\n                    \"value\": \"mail\"\n                  }\n                },\n                \"children\": [\n                  {\n                    \"action\": {\n                      \"type\": \"DONE\",\n                      \"context\": \"Fail\"\n                    }\n                  },\n                  {\n                    \"action\": {\n                      \"type\": \"APC_MAPPING\",\n                      \"context\": \"Success\",\n                      \"authenticationPolicyContractRef\": {\n                        \"id\": \"defaultPolicyContract\"\n                      },\n                      \"attributeMapping\": {\n                        \"attributeSources\": [],\n                        \"attributeContractFulfillment\": {\n                          \"ImmutableID\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"entryUUID\"\n                          },\n                          \"mail\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"mail\"\n                          },\n                          \"subject\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"subject\"\n                          },\n                          \"givenName\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"givenName\"\n                          },\n                          \"memberOf\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"memberOf\"\n                          },\n                          \"sn\": {\n                            \"source\": {\n                              \"type\": \"ADAPTER\",\n                              \"id\": \"IDFirst\"\n                            },\n                            \"value\": \"sn\"\n                          }\n                        },\n                        \"issuanceCriteria\": {\n                          \"conditionalCriteria\": []\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      \"name\": \"Default AuthN Policy\",\n      \"description\": \"This Policy uses the Extended Properties Selector to allow easy switching between:\\r\\n* Basic (HTML + MFA)\\r\\n* Kerberos (Seamless Windows AuthN + MFA)\\r\\n* Passwordless (ID-First + MFA)\",\n      \"enabled\": true\n    },\n    {\n      \"rootNode\": {\n        \"action\": {\n          \"type\": \"AUTHN_SOURCE\",\n          \"authenticationSource\": {\n            \"type\": \"IDP_ADAPTER\",\n            \"sourceRef\": {\n              \"id\": \"HTMLForm\"\n            }\n          }\n        },\n        \"children\": [\n          {\n            \"action\": {\n              \"type\": \"DONE\",\n              \"context\": \"Fail\"\n            }\n          },\n          {\n            \"action\": {\n              \"type\": \"AUTHN_SOURCE\",\n              \"context\": \"Success\",\n              \"authenticationSource\": {\n                \"type\": \"IDP_ADAPTER\",\n                \"sourceRef\": {\n                  \"id\": \"PingID\"\n                }\n              }\n            },\n            \"children\": [\n              {\n                \"action\": {\n                  \"type\": \"DONE\",\n                  \"context\": \"Fail\"\n                }\n              },\n              {\n                \"action\": {\n                  \"type\": \"APC_MAPPING\",\n                  \"context\": \"Success\",\n                  \"authenticationPolicyContractRef\": {\n                    \"id\": \"defaultPolicyContract\"\n                  },\n                  \"attributeMapping\": {\n                    \"attributeSources\": [],\n                    \"attributeContractFulfillment\": {\n                      \"ImmutableID\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"entryUUID\"\n                      },\n                      \"mail\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"mail\"\n                      },\n                      \"subject\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"username\"\n                      },\n                      \"givenName\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"givenName\"\n                      },\n                      \"memberOf\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"memberOf\"\n                      },\n                      \"sn\": {\n                        \"source\": {\n                          \"type\": \"ADAPTER\",\n                          \"id\": \"HTMLForm\"\n                        },\n                        \"value\": \"sn\"\n                      }\n                    },\n                    \"issuanceCriteria\": {\n                      \"conditionalCriteria\": []\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"name\": \"Fallback Policy\",\n      \"description\": \"This Policy presents a HTML Form + MFA for things not configured with Extended Properties\",\n      \"enabled\": true\n    }\n  ],\n  \"defaultAuthenticationSources\": [],\n  \"trackedHttpParameters\": []\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{pfAdminURL}}/pf-admin-api/v1/authenticationPolicies/default",
                    "description": "https://docs.pingidentity.com/csh?Product=pf-latest&topicname=qmq1564002987890.html\n\nSwaps the HTML Form fulfillment to PD attributes"
                  },
                  "response": []
                }
              ],
              "_postman_id": "e1409efb-f557-4796-9528-6ae523e4c454",
              "description": "In the AuthN Policies - replace the following attributes:\n\nAD: `ms-ds-consistencyGuid` --> PD: `entryUUID`\nAD: `userPrincipalName` --> PD: `uid`\nAD: `memberOf` --> PD: `isMemberOf`\n\nPingID --> Incoming UserID --> PD: `uid`",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "26f9c913-8192-4a0f-9172-a4950cb0f85d",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f67c5a8f-611d-42de-9d32-a0b46ac79533",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "3f4e3c08-0476-4422-8917-91c8e7b1d0e4",
          "auth": {
            "type": "basic",
            "basic": {
              "username": "{{pfAdmin}}",
              "password": "{{pfAdminPwd}}"
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "87f5bf9a-4ec2-406f-afb3-c8a8ea3d8937",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5a9bfa06-ca7c-4558-a4dd-12aa60f863ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "08732724-686f-45bf-b92c-423a69a4ac39",
      "description": "Configures PD as the Authoritive source:\n\n**PingDir**\n* Adds Pass-Through AuthN to AD (Synced Users)\n\n**PingFed**\n* Removes AD PCV from HTML Form\n* Modifies AuthN Policy mappings to PD attributes",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "d5918167-e9b5-4aee-89ca-383a8bed81dc",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "710c9b05-29f4-4127-a67b-fe6510b4eb09",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "67ed15bd-d5f8-4c32-981d-c73b82ca69d1",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "7b93040b-3f21-4aea-8976-31f1b5783269",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "a49dfc4a-e2af-442b-a098-d8b0b45efe0a",
      "key": "pfAdminURL",
      "value": "https://pingfederate:9999",
      "type": "string"
    },
    {
      "id": "cb036317-9c93-4f96-a6c3-5399e746b212",
      "key": "pdAdminUrl",
      "value": "https://pingdirectory:443",
      "type": "string"
    },
    {
      "id": "27223863-d296-4126-9921-5e4ca2ef1422",
      "key": "pdsAdminURL",
      "value": "https://pingdatasync:443",
      "type": "string"
    },
    {
      "id": "bb509360-009a-489f-8524-d62cc1edac43",
      "key": "pfAdmin",
      "value": "api-admin",
      "type": "string"
    },
    {
      "id": "a5515c86-9399-4ed3-9d41-91cd241aa6ef",
      "key": "pfAdminPwd",
      "value": "{{globalPwd}}",
      "type": "string"
    },
    {
      "id": "4bc53f41-ae91-4909-b79b-9f0048cd87f0",
      "key": "pdAdmin",
      "value": "cn=administrator",
      "type": "string"
    },
    {
      "id": "bc39a249-c9ae-4a7a-8a7a-3a1f037a5234",
      "key": "pdAdminPwd",
      "value": "{{globalPwd}}",
      "type": "string"
    },
    {
      "id": "5e8aba31-a2a6-41fb-92b9-faab7b683da6",
      "key": "pdsAdmin",
      "value": "cn=administrator",
      "type": "string"
    },
    {
      "id": "e52e20a7-9da1-4710-9022-3820d197e804",
      "key": "pdsAdminPwd",
      "value": "{{globalPwd}}",
      "type": "string"
    },
    {
      "id": "8b3e20df-d8a2-4be0-8f0c-6f070182021d",
      "key": "globalPwd",
      "value": "2FederateM0re",
      "type": "string"
    },
    {
      "id": "a8bc2408-33ac-4600-9bc5-da4eabfdcd9c",
      "key": "adServiceAccount",
      "value": "pingfederate",
      "type": "string"
    },
    {
      "id": "d699126c-3b9d-45cb-adae-fdb0ce84b3f5",
      "key": "adServicePwd",
      "value": "P@ssword99",
      "type": "string"
    },
    {
      "id": "c72663b6-3a8b-4ce9-9c68-ef7b64d520b4",
      "key": "adUserContainer",
      "value": "cn=Users",
      "type": "string"
    },
    {
      "id": "7977cc26-caa4-40ee-ad93-758147e9e2f9",
      "key": "adGroupContainer",
      "value": "ou=Groups",
      "type": "string"
    },
    {
      "id": "2ef6b9f6-4281-4534-bccc-167fae019c10",
      "key": "oauthSecret",
      "value": "{{globalPwd}}",
      "type": "string"
    }
  ]
}